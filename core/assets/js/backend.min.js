'use strict';

if ( ! window.eoxiaJS ) {
	window.eoxiaJS = {};
	window.eoxiaJS.scriptsLoaded = false;
}

window.eoxiaJS.digirisk = {};

if ( ! window.eoxiaJS.scriptsLoaded ) {
	window.eoxiaJS.init = function() {
		window.eoxiaJS.load_list_script();
		window.eoxiaJS.init_array_form();
	};

	window.eoxiaJS.load_list_script = function() {
		if ( ! window.eoxiaJS.scriptsLoaded ) {
			var key = undefined, slug = undefined;
			for ( key in window.eoxiaJS ) {

				if ( window.eoxiaJS[key].init ) {
					window.eoxiaJS[key].init();
				}

				for ( slug in window.eoxiaJS[key] ) {

					if ( window.eoxiaJS[key][slug].init ) {
						window.eoxiaJS[key][slug].init();
					}

				}
			}

			window.eoxiaJS.scriptsLoaded = true;
		}
	};

	window.eoxiaJS.init_array_form = function() {
		 window.eoxiaJS.arrayForm.init();
	};

	window.eoxiaJS.refresh = function() {
		var key = undefined;
		for ( key in window.eoxiaJS ) {
			if ( window.eoxiaJS[key].refresh ) {
				window.eoxiaJS[key].refresh();
			}

			for ( slug in window.eoxiaJS[key] ) {

				if ( window.eoxiaJS[key][slug].refresh ) {
					window.eoxiaJS[key][slug].refresh();
				}
			}
		}
	};

	jQuery( document ).ready( window.eoxiaJS.init );
}

if ( ! window.eoxiaJS.action ) {
	window.eoxiaJS.action = {};

	window.eoxiaJS.action.init = function() {
		window.eoxiaJS.action.event();
	};

	window.eoxiaJS.action.event = function() {
		jQuery( document ).on( 'click', '.action-input:not(.no-action)', window.eoxiaJS.action.execInput );
		jQuery( document ).on( 'click', '.action-attribute:not(.no-action)', window.eoxiaJS.action.execAttribute );
		jQuery( document ).on( 'click', '.action-delete:not(.no-action)', window.eoxiaJS.action.execDelete );
	};

	window.eoxiaJS.action.execInput = function( event ) {
		var element = jQuery( this );
		var parentElement = element;
		var loaderElement = element;
		var listInput = undefined;
		var data = {};
		var i = 0;
		var doAction = true;
		var key = undefined;

		event.preventDefault();

		if ( element.attr( 'data-loader' ) ) {
			loaderElement = element.closest( '.' + element.attr( 'data-loader' ) );
		}

		if ( element.attr( 'data-parent' ) ) {
			parentElement = element.closest( '.' + element.attr( 'data-parent' ) );
		}

		/** Méthode appelée avant l'action */
		if ( element.attr( 'data-namespace' ) && element.attr( 'data-module' ) && element.attr( 'data-before-method' ) ) {
			doAction = false;
			doAction = window.eoxiaJS[element.attr( 'data-namespace' )][element.attr( 'data-module' )][element.attr( 'data-before-method' )]( element );
		}

		if ( element.hasClass( '.grey' ) ) {
			doAction = false;
		}

		if ( doAction ) {
			loaderElement.addClass( 'loading' );

			listInput = window.eoxiaJS.arrayForm.getInput( parentElement );
			for ( i = 0; i < listInput.length; i++ ) {
				if ( listInput[i].name ) {
					data[listInput[i].name] = listInput[i].value;
				}
			}

			element.get_data( function( attrData ) {
				for ( key in attrData ) {
					data[key] = attrData[key];
				}

				window.eoxiaJS.request.send( element, data );
			} );
		}
	};

	window.eoxiaJS.action.execAttribute = function( event ) {
	  var element = jQuery( this );
		var doAction = true;
		var loaderElement = element;

		event.preventDefault();

		if ( element.data( 'loader' ) ) {
			loaderElement = element.closest( '.' + element.attr( 'data-loader' ) );
		}

		/** Méthode appelée avant l'action */
		if ( element.attr( 'data-module' ) && element.attr( 'data-before-method' ) ) {
			doAction = false;
			doAction = window.eoxiaJS[element.attr( 'data-namespace' )][element.attr( 'data-module' )][element.attr( 'data-before-method' )]( element );
		}

		if ( element.hasClass( '.grey' ) ) {
			doAction = false;
		}

		if ( doAction ) {
			if ( jQuery( this ).attr( 'data-confirm' ) ) {
				if ( window.confirm( jQuery( this ).attr( 'data-confirm' ) ) ) {
					element.get_data( function( data ) {
						loaderElement.addClass( 'loading' );
						window.eoxiaJS.request.send( element, data );
					} );
				}
			} else {
				element.get_data( function( data ) {
					loaderElement.addClass( 'loading' );
					window.eoxiaJS.request.send( element, data );
				} );
			}
		}

		event.stopPropagation();
	};

	window.eoxiaJS.action.execDelete = function( event ) {
	  var element = jQuery( this );
		var doAction = true;
		var loaderElement = element;

		event.preventDefault();

		if ( element.attr( 'data-loader' ) ) {
			loaderElement = element.closest( '.' + element.attr( 'data-loader' ) );
		}

		/** Méthode appelée avant l'action */
		if ( element.attr( 'data-namespace' ) && element.attr( 'data-module' ) && element.attr( 'data-before-method' ) ) {
			doAction = false;
			doAction = window.eoxiaJS[element.attr( 'data-namespace' )][element.attr( 'data-module' )][element.attr( 'data-before-method' )]( element );
		}

		if ( element.hasClass( '.grey' ) ) {
			doAction = false;
		}

		if ( doAction ) {
			if ( window.confirm( window.digi_confirm_delete ) ) {
				element.get_data( function( data ) {
					loaderElement.addClass( 'loading' );
					window.eoxiaJS.request.send( element, data );
				} );
			}
		}
	};
}

if ( ! window.eoxiaJS.arrayForm ) {

	window.eoxiaJS.arrayForm = {};

	window.eoxiaJS.arrayForm.init = function() {};

	window.eoxiaJS.arrayForm.getInput = function( parent ) {
		return parent.find( 'input, textarea, select' );
	};

	window.eoxiaJS.arrayForm.getInputValue = function( input ) {
		switch ( input.getAttribute( 'type' ) ) {
			case 'checkbox':
				return input.checked;
				break;
			default:
				return input.value;
				break;
		}
	};

	window.eoxiaJS.arrayForm.sendForm = function( event ) {
		var element = jQuery( this );
		var parent = element.closest( '.form' );
		var listInput = window.eoxiaJS.arrayForm.getInput( parent );
		var data = {};
		var i = 0;

		event.preventDefault();

		for ( i = 0; i < listInput.length; i++ ) {
			if ( listInput[i].name ) {
				data[listInput[i].name] = window.eoxiaJS.arrayForm.getInputValue( listInput[i] );
			}
		}

		window.eoxiaJS.request.send( element, data );
	};

	}

if ( ! jQuery.fn.get_data ) {
	jQuery.fn.get_data = function( cb ) {
		this.each( function() {
			var data = {};
			var i = 0;
			var localName = undefined;

			for ( i = 0; i <  jQuery( this )[0].attributes.length; i++ ) {
				localName = jQuery( this )[0].attributes[i].localName;
				if ( 'data' === localName.substr( 0, 4 ) || 'action' === localName ) {
					localName = localName.substr( 5 );

					if ( 'nonce' === localName ) {
						localName = '_wpnonce';
					}

					localName = localName.replace( '-', '_' );
					data[localName] =  jQuery( this )[0].attributes[i].value;
				}
			}

			cb( data );
		} );
	};
	}

if ( ! window.eoxiaJS.date ) {

	window.eoxiaJS.date = {};

	window.eoxiaJS.date.init = function() {
		jQuery( document ).on( 'click', 'input.date', function( e ) {
			jQuery( this ).datetimepicker( {
				'lang': 'fr',
				'format': 'd/m/Y',
				timepicker: false
			} );
			jQuery( this ).datetimepicker( 'show' );
		} );

		jQuery( document ).on( 'click', 'input.date-time', function( e ) {
			jQuery( this ).datetimepicker( {
				'lang': 'fr',
				'format': 'd/m/Y h:i'
			} );
			jQuery( this ).datetimepicker( 'show' );
		} );
	};
}

if ( ! window.eoxiaJS.form ) {
	window.eoxiaJS.form = {};

	window.eoxiaJS.form.init = function() {
	    window.eoxiaJS.form.event();
	};
	window.eoxiaJS.form.event = function() {
	    jQuery( document ).on( 'click', '.submit-form', window.eoxiaJS.form.submitForm );
	};

	window.eoxiaJS.form.submitForm = function( event ) {
		var element = jQuery( this );
		var doAction = true;

		event.preventDefault();

	/** Méthode appelée avant l'action */
		if ( element.attr( 'data-module' ) && element.attr( 'data-before-method' ) ) {
			doAction = false;
			doAction = window.eoxiaJS[element.attr( 'data-module' )][element.attr( 'data-before-method' )]( element );
		}

		if ( doAction ) {
			element.closest( 'form' ).ajaxSubmit( {
				success: function( response ) {
					if ( response && response.data.module && response.data.callback ) {
						window.eoxiaJS[response.data.module][response.data.callback]( element, response );
					}

					if ( response && response.success ) {
						if ( response.data.module && response.data.callback_success ) {
							window.eoxiaJS[response.data.module][response.data.callback_success]( element, response );
						}
					} else {
						if ( response.data.module && response.data.callback_error ) {
							window.eoxiaJS[response.data.module][response.data.callback_error]( element, response );
						}
					}
				}
			} );
		}
	};
}

if ( ! window.eoxiaJS.global ) {
	window.eoxiaJS.global = {};

	window.eoxiaJS.global.init = function() {};

	window.eoxiaJS.global.downloadFile = function( urlToFile, filename ) {
		var url = jQuery( '<a href="' + urlToFile + '" download="' + filename + '"></a>' );
		jQuery( '.wrap' ).append( url );
		url[0].click();
		url.remove();
	};

	window.eoxiaJS.global.removeDiacritics = function( input ) {
		var output = '';
		var normalized = input.normalize( 'NFD' );
		var i = 0;
		var j = 0;

		while ( i < input.length ) {
			output += normalized[j];

			j += ( input[i] == normalized[j] ) ? 1 : 2;
			i++;
		}

		return output;
	};

	}

window.eoxiaJS.digirisk.input = {};

window.eoxiaJS.digirisk.input.init = function() {
	window.eoxiaJS.digirisk.input.event();
};

window.eoxiaJS.digirisk.input.event = function() {
  jQuery( document ).on( 'keyup', '.digirisk-wrap .form-element input, .digirisk-wrap .form-element textarea', window.eoxiaJS.digirisk.input.keyUp );
};

window.eoxiaJS.digirisk.input.keyUp = function( event ) {
	if ( 0 < jQuery( this ).val().length ) {
		jQuery( this ).closest( '.form-element' ).addClass( 'active' );
	} else {
		jQuery( this ).closest( '.form-element' ).removeClass( 'active' );
	}
};

if ( ! window.eoxiaJS.popup  ) {
	window.eoxiaJS.popup = {};

	window.eoxiaJS.popup.init = function() {
		window.eoxiaJS.popup.event();
	};

	window.eoxiaJS.popup.event = function() {
		jQuery( document ).on( 'keyup', window.eoxiaJS.popup.keyup );
	  jQuery( document ).on( 'click', '.open-popup, .open-popup i', window.eoxiaJS.popup.open );
	  jQuery( document ).on( 'click', '.open-popup-ajax', window.eoxiaJS.popup.openAjax );
	  jQuery( document ).on( 'click', '.popup .container, .digi-popup-propagation', window.eoxiaJS.popup.stop );
	  jQuery( document ).on( 'click', '.popup .container .button.green', window.eoxiaJS.popup.confirm );
	  jQuery( document ).on( 'click', '.popup .close', window.eoxiaJS.popup.close );
	  jQuery( document ).on( 'click', 'body', window.eoxiaJS.popup.close );
	};

	window.eoxiaJS.popup.keyup = function( event ) {
		if ( 27 === event.keyCode ) {
			jQuery( '.popup .close' ).click();
		}
	};

	window.eoxiaJS.popup.open = function( event ) {
		var triggeredElement = jQuery( this );

		if ( triggeredElement.is( 'i' ) ) {
			triggeredElement = triggeredElement.parents( '.open-popup' );
		}

		var target = triggeredElement.closest(  '.' + triggeredElement.data( 'parent' ) ).find( '.' + triggeredElement.data( 'target' ) );
		var cbObject, cbNamespace, cbFunc = undefined;
		target.addClass( 'active' );

		if ( target.is( ':visible' ) && triggeredElement.data( 'cb-namespace' ) && triggeredElement.data( 'cb-object' ) && triggeredElement.data( 'cb-func' ) ) {
			cbNamespace = triggeredElement.data( 'cb-namespace' );
			cbObject = triggeredElement.data( 'cb-object' );
			cbFunc = triggeredElement.data( 'cb-func' );

			// On récupères les "data" sur l'élement en tant qu'args.
			triggeredElement.get_data( function( data ) {
				window.eoxiaJS[cbNamespace][cbObject][cbFunc]( triggeredElement, target, event, data );
			} );
		}

	  event.stopPropagation();
	};

	/**
	 * Ouvre la popup en envoyant une requête AJAX.
	 * Les paramètres de la requête doivent être configurer directement sur l'élement
	 * Ex: data-action="load-workunit" data-id="190"
	 *
	 * @param  {[type]} event [description]
	 * @return {[type]}       [description]
	 */
	window.eoxiaJS.popup.openAjax = function( event ) {
		var element = jQuery( this );
		var target = jQuery( this ).closest(  '.' + jQuery( this ).data( 'parent' ) ).find( '.' + jQuery( this ).data( 'target' ) );
		target.addClass( 'active' );
		target.find( '.container' ).addClass( 'loading' );

		if ( jQuery( this ).data( 'title' ) ) {
			target.find( '.title' ).text( jQuery( this ).data( 'title' ) );
		}

		jQuery( this ).get_data( function( data ) {
			delete data.parent;
			delete data.target;
			window.eoxiaJS.request.send( element, data );
		});

		event.stopPropagation();
	};

	window.eoxiaJS.popup.confirm = function( event ) {
		var triggeredElement = jQuery( this );
		var cbNamespace, cbObject, cbFunc = undefined;

		if ( ! jQuery( '.popup' ).hasClass( 'no-close' ) ) {
			jQuery( '.popup' ).removeClass( 'active' );

			if ( triggeredElement.attr( 'data-cb-namespace' ) && triggeredElement.attr( 'data-cb-object' ) && triggeredElement.attr( 'data-cb-func' ) ) {
				cbNamespace = triggeredElement.attr( 'data-cb-namespace' );
				cbObject = triggeredElement.attr( 'data-cb-object' );
				cbFunc = triggeredElement.attr( 'data-cb-func' );

				// On récupères les "data" sur l'élement en tant qu'args.
				triggeredElement.get_data( function( data ) {
					window.eoxiaJS[cbNamespace][cbObject][cbFunc]( triggeredElement, event, data );
				} );
			}
		}
	};

	window.eoxiaJS.popup.stop = function( event ) {
		event.stopPropagation();
	};

	window.eoxiaJS.popup.close = function( event ) {
		jQuery( '.popup:not(.no-close)' ).removeClass( 'active' );
		jQuery( '.digi-popup:not(.no-close)' ).removeClass( 'active' );
	};
}

"use strict";

var regex = {
	validateEmail: function(email) {
	    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	    return re.test(email);
	},

	validateEndEmail: function( endEmail ) {
		var re = /^[a-zA-Z0-9]+\.[a-zA-Z0-9]+(\.[a-z-A-Z0-9]+)?$/;
		return re.test( endEmail );
	}
};

if ( ! window.eoxiaJS.render ) {
	window.eoxiaJS.render = {};

	window.eoxiaJS.render.init = function() {
		window.eoxiaJS.render.event();
	};

	window.eoxiaJS.render.event = function() {};

	window.eoxiaJS.render.callRenderChanged = function() {
		var key = undefined;
		var slug = undefined;

		for ( key in window.eoxiaJS ) {
			if ( window.eoxiaJS[key].renderChanged ) {
				window.eoxiaJS[key].renderChanged();
			}

			for ( slug in window.eoxiaJS[key] ) {
				if ( window.eoxiaJS[key][slug].renderChanged ) {
					window.eoxiaJS[key][slug].renderChanged();
				}
			}
		}
	};
}

if ( ! window.eoxiaJS.request ) {
	window.eoxiaJS.request = {};

	window.eoxiaJS.request.init = function() {};

	window.eoxiaJS.request.send = function( element, data ) {
		jQuery.post( window.ajaxurl, data, function( response ) {
			element.closest( '.loading' ).removeClass( 'loading' );

			if ( response && response.success ) {
				if ( response.data.namespace && response.data.module && response.data.callback_success ) {
					window.eoxiaJS[response.data.namespace][response.data.module][response.data.callback_success]( element, response );
				}
			} else {
				if ( response.data.namespace && response.data.module && response.data.callback_error ) {
					window.eoxiaJS[response.data.namespace][response.data.module][response.data.callback_error]( element, response );
				}
			}
		}, 'json' );
	};

	window.eoxiaJS.request.get = function( url, data ) {
		jQuery.get( url, data, function( response ) {
			if ( response && response.success ) {
				if ( response.data.namespace && response.data.module && response.data.callback_success ) {
					window.eoxiaJS[response.data.namespace][response.data.module][response.data.callback_success]( response );
				}
			} else {
				if ( response.data.namespace && response.data.module && response.data.callback_error ) {
					window.eoxiaJS[response.data.namespace][response.data.module][response.data.callback_error]( response );
				}
			}
		}, 'json' );
	};

}

if ( ! window.eoxiaJS.tab ) {
	window.eoxiaJS.tab = {};

	window.eoxiaJS.tab.init = function() {
		window.eoxiaJS.tab.event();
	};

	window.eoxiaJS.tab.event = function() {
	  jQuery( document ).on( 'click', '.tab-element', window.eoxiaJS.tab.load );
	};

	window.eoxiaJS.tab.load = function( event ) {
		var tabTriggered = jQuery( this );
		var data = {};

	  event.preventDefault();
		event.stopPropagation();

		tabTriggered.closest( '.content' ).removeClass( 'active' );

		if ( ! tabTriggered.hasClass( 'no-tab' ) && tabTriggered.data( 'action' ) ) {
			jQuery( '.tab .tab-element.active' ).removeClass( 'active' );
			tabTriggered.addClass( 'active' );

			data = {
				action: 'load_tab_content',
				_wpnonce: tabTriggered.data( 'nonce' ),
				tab_to_display: tabTriggered.data( 'action' ),
				title: tabTriggered.data( 'title' ),
				element_id: tabTriggered.data( 'id' )
		  };

			jQuery( '.' + tabTriggered.data( 'target' ) ).addClass( 'loading' );

			jQuery.post( window.ajaxurl, data, function( response ) {
				jQuery( '.' + tabTriggered.data( 'target' ) ).replaceWith( response.data.template );

				window.eoxiaJS.tab.callTabChanged();
			} );

		}

	};

	window.eoxiaJS.tab.callTabChanged = function() {
		var key = undefined;
		var slug = undefined;

		for ( key in window.eoxiaJS ) {
			if ( window.eoxiaJS[key].tabChanged ) {
				window.eoxiaJS[key].tabChanged();
			}

			for ( slug in window.eoxiaJS[key] ) {
				if ( window.eoxiaJS[key][slug].tabChanged ) {
					window.eoxiaJS[key][slug].tabChanged();
				}
			}
		}
	};
}

if ( ! window.eoxiaJS.toggle ) {
	window.eoxiaJS.toggle = {};

	window.eoxiaJS.toggle.init = function() {
		window.eoxiaJS.toggle.event();
	};

	window.eoxiaJS.toggle.event = function() {
	  jQuery( document ).on( 'click', '.toggle:not(.disabled), .toggle:not(.disabled) i', window.eoxiaJS.toggle.open );
	  jQuery( document ).on( 'click', 'body', window.eoxiaJS.toggle.close );
	};

	window.eoxiaJS.toggle.open = function( event ) {
		var target = undefined;
		var data = {};
		var i = 0;
		var listInput = undefined;
		var key = undefined;
		var elementToggle = jQuery( this );

		if ( elementToggle.is( 'i' ) ) {
			elementToggle = elementToggle.parents( '.toggle' );
		}

		jQuery( '.toggle .content.active' ).removeClass( 'active' );

		if ( elementToggle.attr( 'data-parent' ) ) {
			target = elementToggle.closest( '.' + elementToggle.attr( 'data-parent' ) ).find( '.' + elementToggle.attr( 'data-target' ) );
		} else {
			target = jQuery( '.' + elementToggle.attr( 'data-target' ) );
		}

		if ( target ) {
		  target.toggleClass( 'active' );
		  event.stopPropagation();
		}

		if ( elementToggle.attr( 'data-action' ) ) {
			elementToggle.addClass( 'loading' );

			listInput = window.eoxiaJS.arrayForm.getInput( elementToggle );
			for ( i = 0; i < listInput.length; i++ ) {
				if ( listInput[i].name ) {
					data[listInput[i].name] = listInput[i].value;
				}
			}

			elementToggle.get_data( function( attrData ) {
				for ( key in attrData ) {
					data[key] = attrData[key];
				}

				window.eoxiaJS.request.send( elementToggle, data );
			} );
		}
	};

	window.eoxiaJS.toggle.close = function( event ) {
		jQuery( '.toggle .content' ).removeClass( 'active' );
		event.stopPropagation();
	};
}

"use strict";

var digi_accident = {
	$: undefined,

	init: function( event, $ ) {
		digi_accident.$ = $;
		if ( event || event === undefined ) {
			digi_accident.event();
		}
	},

	event: function() {
		digi_accident.$( document ).on( 'click', '.form-accident .wp-digi-action-new', function( event ) { digi_accident.edit_accident( event, digi_accident.$( this ) ); } );
		digi_accident.$( document ).on( 'click', '.wp-digi-accident .wp-digi-action-delete', function( event ) { digi_accident.delete_accident( event, digi_accident.$( this ) ); } );
		digi_accident.$( document ).on( 'click', '.wp-digi-accident .wp-digi-action-load', function( event ) { digi_accident.load_accident( event, digi_accident.$( this ) ); } );
		// digi_accident.$( document ).on( 'click', '.wp-digi-accident .wp-digi-action-edit', function( event ) { digi_accident.edit_accident( event, digi_accident.$( this ) ); } );
	},

	edit_accident: function( event, element ) {

    digi_accident.$( element ).closest( 'form' ).ajaxSubmit( {
      'beforeSubmit': function() {
				digi_accident.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );
      },
			success: function( response ) {
				digi_accident.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
				digi_accident.$( '.wp-digi-accident.wp-digi-list' ).replaceWith( response.data.template );
			}
		} );
	},

	delete_accident: function( event, element ) {
		event.preventDefault();

    if( window.confirm( window.digi_confirm_delete ) ) {
  		var accident_id = digi_accident.$( element ).data( 'id' );

  		digi_accident.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

  		var data = {
  			action: 'wpdigi-delete-accident',
  			_wpnonce: digi_accident.$( element ).data( 'nonce' ),
  			global: digi_accident.$( element ).data( 'global' ),
  			accident_id: accident_id,
  		};

  		digi_accident.$.post( window.ajaxurl, data, function() {
  			digi_accident.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
  			digi_accident.$( '.wp-digi-list .wp-digi-list-item[data-accident-id="' + accident_id + '"]' ).fadeOut();
  		} );
    }
	},

	load_accident: function( event, element ) {
		event.preventDefault();

    digi_accident.send_accident();

		var accident_id = digi_accident.$( element ).data( 'id' );
		digi_accident.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

		var data = {
			action: 'load_accident',
			_wpnonce: digi_accident.$( element ).data( 'nonce' ),
			accident_id: accident_id,
		};

		digi_accident.$.post( window.ajaxurl, data, function( response ) {
      digi_accident.$( '.wp-digi-list-item .dashicons-edit' ).hide();
			digi_accident.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
			digi_accident.$( '.wp-digi-accident .wp-digi-list-item[data-accident-id="' + accident_id + '"]' ).replaceWith( response.data.template );
		} );
	},

	send_accident: function() {
		digi_accident.$( '.wp-digi-table-item-edit' ).each( function() {
			digi_accident.$( this ).find( '.dashicons-edit' ).click();
		} );
	}
};

"use strict";

var digi_chemical_product = {
	$: undefined,

	init: function( event, $ ) {
		digi_chemical_product.$ = $;
		if ( event || event === undefined ) {
			digi_chemical_product.event();
		}
	},

	event: function() {
		digi_chemical_product.$( document ).on( 'click', '.form-chemical-product .wp-digi-action-new', function( event ) { digi_chemical_product.edit_chemical_product( event, digi_chemical_product.$( this ) ); } );
		digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical-product .wp-digi-action-delete', function( event ) { digi_chemical_product.delete_chemical_product( event, digi_chemical_product.$( this ) ); } );
		digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical-product .wp-digi-action-load', function( event ) { digi_chemical_product.load_chemical_product( event, digi_chemical_product.$( this ) ); } );
		// digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical_product .wp-digi-action-edit', function( event ) { digi_chemical_product.edit_chemical_product( event, digi_chemical_product.$( this ) ); } );
	},

	edit_chemical_product: function( event, element ) {

    digi_chemical_product.$( element ).closest( 'form' ).ajaxSubmit( {
      'beforeSubmit': function() {
				digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );
      },
			success: function( response ) {
				digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
				digi_chemical_product.$( '.wp-digi-chemical-product.wp-digi-list' ).replaceWith( response.data.template );
			}
		} );
	},

	delete_chemical_product: function( event, element ) {
		event.preventDefault();

    if( window.confirm( window.digi_confirm_delete ) ) {
  		var chemical_product_id = digi_chemical_product.$( element ).data( 'id' );

  		digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

  		var data = {
  			action: 'wpdigi-delete-chemical_product',
  			_wpnonce: digi_chemical_product.$( element ).data( 'nonce' ),
  			global: digi_chemical_product.$( element ).data( 'global' ),
  			chemical_product_id: chemical_product_id,
  		};

  		digi_chemical_product.$.post( window.ajaxurl, data, function() {
  			digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
  			digi_chemical_product.$( '.wp-digi-list .wp-digi-list-item[data-chemical-product-id="' + chemical_product_id + '"]' ).fadeOut();
  		} );
    }
	},

	load_chemical_product: function( event, element ) {
		event.preventDefault();

    digi_chemical_product.send_chemical_product();

		var chemical_product_id = digi_chemical_product.$( element ).data( 'id' );
		digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

		var data = {
			action: 'load_chemical_product',
			_wpnonce: digi_chemical_product.$( element ).data( 'nonce' ),
			chemical_product_id: chemical_product_id,
		};

		digi_chemical_product.$.post( window.ajaxurl, data, function( response ) {
      digi_chemical_product.$( '.wp-digi-list-item .dashicons-edit' ).hide();
			digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
			digi_chemical_product.$( '.wp-digi-chemical-product .wp-digi-list-item[data-chemical-product-id="' + chemical_product_id + '"]' ).replaceWith( response.data.template );
		} );
	},

	send_chemical_product: function() {
		digi_chemical_product.$( '.wp-digi-table-item-edit' ).each( function() {
			digi_chemical_product.$( this ).find( '.dashicons-edit' ).click();
		} );
	}
};

window.eoxiaJS.digirisk.comment = {};

window.eoxiaJS.digirisk.comment.init = function() {
	window.eoxiaJS.digirisk.comment.event();
};

window.eoxiaJS.digirisk.comment.event = function() {};

window.eoxiaJS.digirisk.comment.delete_success = function( element, response ) {
	jQuery( element ).closest( 'li' ).fadeOut();
};

window.eoxiaJS.digirisk.comment.saved_comment_success = function( element, response ) {
	element.closest( '.comment-container' ).replaceWith( response.data.view );
};

/**
 * Initialise l'objet "correctiveTask" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.correctiveTask = {};

window.eoxiaJS.digirisk.correctiveTask.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "open_task".
 * Remplaces le contenu de la popup "corrective-task" par la vue renvoyée par la réponse Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.correctiveTask.openedTaskPopup = function( triggeredElement, response ) {
	jQuery( '.popup.corrective-task .content' ).html( response.data.view );
	jQuery( '.popup.corrective-task .container.loading' ).removeClass( 'loading' );
};

/**
 * Initialise l'objet "danger" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.9.0
 */
window.eoxiaJS.digirisk.danger = {};

window.eoxiaJS.digirisk.danger.init = function() {
	window.eoxiaJS.digirisk.danger.event();
};

window.eoxiaJS.digirisk.danger.event = function() {
	jQuery( document ).on( 'click', '.table.risk .categorie-container.danger .item', window.eoxiaJS.digirisk.danger.selectDanger );
};

/**
 * Lors du clic sur un danger, remplaces le contenu du toggle et met l'image du risque sélectionné.
 *
 * @param  {MouseEvent} event [description]
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.danger.selectDanger = function( event ) {
	var element = jQuery( this );
	var data = {};
	element.closest( '.content' ).removeClass( 'active' );
	element.closest( 'tr' ).find( 'input.input-hidden-danger' ).val( element.data( 'id' ) );
	element.closest( '.toggle' ).find( '.action span' ).hide();
	element.closest( '.toggle' ).find( '.action img' ).show();
	element.closest( '.toggle' ).find( '.action img' ).attr( 'src', element.find( 'img' ).attr( 'src' ) );
	element.closest( '.toggle' ).find( '.action img' ).attr( 'srcset', '' );
	element.closest( '.toggle' ).find( '.action img' ).attr( 'sizes', '' );
	element.closest( '.toggle' ).find( '.action img' ).attr( 'aria-label', element.closest( '.tooltip' ).attr( 'aria-label' ) );

	element.closest( '.risk-row' ).find( '.categorie-container.tooltip' ).removeClass( 'active' );
	event.stopPropagation();

	// Rend le bouton "active".
	if ( -1 != element.closest( 'tr' ).find( 'input[name="risk[evaluation][scale]"]' ).val() ) {
		element.closest( 'tr' ).find( '.action .button.disable' ).removeClass( 'disable' ).addClass( 'blue' );
	}

	data.action = 'check_predefined_danger';
	data._wpnonce = element.closest( '.toggle' ).data( 'nonce' );
	data.danger_id = element.data( 'id' );
	data.society_id = element.closest( '.risk-row' ).find( 'input[name="parent_id"] ' ).val();

	jQuery( this ).closest( 'td' ).addClass( 'loading' );

	window.eoxiaJS.request.send( jQuery( this ).closest( '.toggle' ), data );
};

window.eoxiaJS.digirisk.document = {};

window.eoxiaJS.digirisk.document.init = function() {
	window.eoxiaJS.digirisk.document.event();
};

window.eoxiaJS.digirisk.document.event = function() {
	jQuery( ".wp-digi-societytree-right-container" ).on( "click", "#wpdigi-save-element-sheet", window.eoxiaJS.digirisk.document.save_element_sheet );
	jQuery( ".wp-digi-societytree-right-container" ).on( "click", ".wp-digi-list-document .wp-digi-action-regenerate", window.eoxiaJS.digirisk.document.regenerate_document );
	jQuery( document ).on( 'click', '.wp-digi-doc-pagination a', window.eoxiaJS.digirisk.document.pagination );

};

window.eoxiaJS.digirisk.document.save_element_sheet = function ( event ) {
	event.preventDefault();

	jQuery( this ).addClass( "wp-digi-loading" );


	var options = {
        beforeSubmit:  function( formData, jqForm, options ) {
        },
        success:       function( responseText, statusText, xhr, $form ) {
        	jQuery( this ).removeClass( "wp-digi-loading" );
        	if ( responseText.success ) {
        		if ( undefined !== jQuery( ".wp-digi-global-sheet-content ul.wp-digi-list-document" ).html() ) {
        			jQuery( ".wp-digi-global-sheet-content ul.wp-digi-list-document" ).prepend( responseText.data.output );
        		}
        		else {
        			jQuery( ".wp-digi-global-sheet-tab li.wp-digi-sheet-generation-button" ).click();
        		}
        	}
        	else {

        	}
        },
        dataType: "json",
        resetForm: true,
    };
	jQuery( "#wpdigi-save-element-form" ).ajaxSubmit( options );
};

window.eoxiaJS.digirisk.document.regenerate_document = function ( event ) {
	event.preventDefault();

	var data = {
		action: 'wpdigi_regenerate_document',
		element_id: jQuery( this ).data( 'id' ),
		parent_id: jQuery( this ).data( 'parent-id' ),
		model_name: jQuery( this ).data( 'model'),
		_wpnonce: jQuery( this ).data( 'nonce' ),
	};
	jQuery.post( window.ajaxurl, data, function() {} );
};

window.eoxiaJS.digirisk.document.pagination = function( event ) {
	event.preventDefault();

	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var next_page = href[1].replace('current_page=', '');
	var element_id = href[2].replace('element_id=', '');

	var data = {
		action: 'paginate_document',
		element_id: element_id,
		next_page: next_page
	};

	jQuery.post( window.ajaxurl, data, function( template ) {
		jQuery( '.doc-content' ).replaceWith( template );
	} );
};

/**
 * Initialise l'objet "DUER" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.5.0
 */

window.eoxiaJS.digirisk.DUER = {};

window.eoxiaJS.digirisk.DUER.init = function() {
	window.eoxiaJS.digirisk.DUER.event();
};

window.eoxiaJS.digirisk.DUER.event = function() {};

/**
 * Cette méthode est appelée lors du clique sur une des icones dans le tableau d'édition des DUER.
 *
 * Remplis la popup avec:
 * -la balise <h2> qui est égale au titre data-title de triggeredElement.
 * -la balise <textarea> qui est égale au contenu du textarea de args.src dans le tableau de l'édition d'un DUER.
 * -Modifie le contenu de ".change-content" par un <textarea>. On modifie le contenu car la Popup est utilisé dans d'autres cas.
 * -Rend invisible la balise <p>. Cette balise <p> est utilisé quand on veut voir le contenu de la popup et non le modifier.
 *
 * -Met args.src dans l'attribut data-target du "bouton vert" qui permet de valider l'édition.
 *
 * @param  {HTMLSpanElement} triggeredElement L'icone qui déclenche l'action.
 * @param  {HTMLDivElement}  popupElement     La popup.
 * @param  {MouseEvent}      event            Le clic sur l'icone.
 * @param  {Object}          args             Les données sur l'élement HTMLSpanElement. (l'icone)
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.DUER.fill_textarea_in_popup = function( triggeredElement, popupElement, event, args ) {
	var textareaContent = '';

	if ( args ) {
		popupElement.find( 'h2' ).text( args.title );
		popupElement.find( '.change-content' ).html( '<textarea class="hidden" rows="8" style="width: 100%; display: inline-block;"></textarea>' );

		// On récupères le textarea caché avec le contenu actuel.
		textareaContent = triggeredElement.closest( 'tr' ).find( '.textarea-content-' + args.src ).val();
		popupElement.find( 'textarea' ).show();
		popupElement.find( 'p' ).hide();
		popupElement.find( 'textarea' ).val( textareaContent );
		popupElement.find( '.button' ).attr( 'data-target', args.src );
	}
};

/**
 * Cette méthode est appelée lors du clique sur une des icones dans le tableau d'édition des DUER.
 *
 * Remplis la popup avec:
 * -la balise <h2> qui est égale au titre data-title de triggeredElement.
 * -Cache la balise <textarea>.
 * -Modifie le contenu de ".change-content" par un paragraphe vide pour ensuite ajouter le contenu.
 *
 * @param  {HTMLSpanElement} triggeredElement L'icone qui déclenche l'action.
 * @param  {HTMLDivElement}  popupElement     La popup.
 * @param  {MouseEvent}      event            Le clic sur l'icone.
 * @param  {Object}          args             Les données sur l'élement HTMLSpanElement. (l'icone)
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.DUER.view_in_popup = function( triggeredElement, popupElement, event, args ) {
	if ( args ) {
		popupElement.find( 'h2' ).text( args.title );
		popupElement.find( 'textarea' ).hide();
		popupElement.find( '.change-content' ).html( '<p></p>' );
		popupElement.find( 'p' ).html( triggeredElement.closest( 'tr' ).find( '.text-content-' + args.src ).html() ).show();
	}
};

window.eoxiaJS.digirisk.DUER.set_textarea_content = function( triggeredElement, event, args ) {
	if ( args && args['target'] ) {
		var textarea_content = jQuery( '.popup textarea' ).val();

		jQuery( '.textarea-content-' + args['target'] ).val( textarea_content );
	}
};

window.eoxiaJS.digirisk.DUER.popup_for_generate_DUER = function( triggeredElement, popupElement, event, args ) {
	var data = {
		action: 'display_societies_duer',
		id: args.id,
		_wpnonce: args._wpnonce
	};

	popupElement.find( 'h2' ).text( args.title );
	popupElement.addClass( 'duer no-close loading' );
	popupElement.find( '.change-content' ).html( '<p></p>' );
	popupElement.find( '.button.green' ).attr( 'data-cb-func', 'close_popup_generate_DUER' );

	window.eoxiaJS.request.send( popupElement, data );
};

window.eoxiaJS.digirisk.DUER.displayedSocietyDUERSuccess = function( popup, response ) {
	popup.find( '.change-content' ).html( response.data.view );

	window.eoxiaJS.digirisk.DUER.generateDUER( jQuery( '.open-popup.add' ), { index: 0 } );
};

window.eoxiaJS.digirisk.DUER.generateDUER = function( triggeredElement, preData ) {
	var data = {};
	var i = 0;
	var listInput = window.eoxiaJS.arrayForm.getInput( triggeredElement.closest( 'tr' ) );

	for ( i = 0; i < listInput.length; i++ ) {
		if ( listInput[i].name ) {
			data[listInput[i].name] = window.eoxiaJS.arrayForm.getInputValue( listInput[i] );
		}
	}

	for ( i in preData ) {
		data[i] = preData[i];
	}

	data['society_id'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'id' );
	data['duer'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'duer' );
	data['generate_duer'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'generate-duer' );
	data['zip'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'zip' );

	if ( data['zip'] ) {
		data['element_id'] = jQuery( '.popup li:nth-child(3)' ).data( 'id' );
	}

	if ( data['generate_duer'] ) {
		data['element_id'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'element-id' );
		data['parent_id'] = jQuery( '.popup li:nth-child(' + ( data.index + 1 ) + ')' ).data( 'parent-id' );
	}

	window.eoxiaJS.request.send( triggeredElement, data );
};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_DUER".
 * Coches le LI correspondant à index et regénères un DUER.
 * Si la réponse contient "end", stop la génération du DUER, et rend le bouton cliquable.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.DUER.generatedDUERSuccess = function( element, response ) {
	jQuery( '.popup li:nth-child(' + ( response.data.index ) + ')' ).find( 'img' ).remove();
	jQuery( '.popup li:nth-child(' + ( response.data.index ) + ')' ).append( '<span class="dashicons dashicons-yes"></span>' );
	if ( response.data.creation_response.id  ) {
		jQuery( '.popup li:nth-child(' + ( response.data.index + 1 ) + ')' ).attr( 'data-element-id', response.data.creation_response.id );
	}

	if ( ! response.data.end ) {
		window.eoxiaJS.digirisk.DUER.generateDUER( element, response.data );
	} else {
		jQuery( '.popup' ).removeClass( 'no-close' );
	}
};

window.eoxiaJS.digirisk.DUER.callback_generate_duer_error = function() {};

window.eoxiaJS.digirisk.DUER.close_popup_generate_DUER = function( element, event ) {
	jQuery( '.digirisk-wrap .button[data-action="digi_list_duer"]' ).click();
};

/**
 * Initialise l'objet "evaluation_method_digirisk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.evaluation_method_digirisk = {};

window.eoxiaJS.digirisk.evaluation_method_digirisk.init = function() {
	window.eoxiaJS.digirisk.evaluation_method_digirisk.event();
};

window.eoxiaJS.digirisk.evaluation_method_digirisk.event = function() {
	jQuery( document ).on( 'click', '.table.risk .cotation-container li.item:not(.open-popup)', window.eoxiaJS.digirisk.evaluation_method_digirisk.select_cotation );
};

/**
 * Clique sur une des cotations simples.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.evaluation_method_digirisk.select_cotation = function( event ) {
	var element = jQuery( this );
	var level = element.data( 'level' );
	var methodEvaluationId = element.closest( 'tr' ).find( 'input.digi-method-simple' ).val();
	var div = element.closest( '.cotation-container' );

	div.find( '.action span' ).html( element.text() );
	div.find( '.action i' ).hide();
	element.closest( '.content' ).removeClass( 'active' );

	div.find( '.action' )[0].className = div.find( '.action' )[0].className.replace( /level[-1]?[0-4]/, 'level' + level );
	event.stopPropagation();

	// Met le niveau de la cotation dans le input risk-level
	element.closest( 'tr' ).find( '.risk-level' ).val( level );

	// Met le méthode d'évaluation dans le input input-hidden-method-id
	element.closest( 'tr' ).find( 'input.input-hidden-method-id' ).val( methodEvaluationId );

	element.closest( '.risk-row' ).find( '.cotation-container.tooltip' ).removeClass( 'active' );

	// Rend le bouton "active".
	if ( -1 != element.closest( 'tr' ).find( 'input.input-hidden-danger' ).val() ) {
		element.closest( 'tr' ).find( '.action .button.disable' ).removeClass( 'disable' ).addClass( 'blue' );
	}
};

/**
 * Initialise l'objet "evaluationMethodEvarisk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.evaluationMethodEvarisk = {};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.init = function() {
	window.eoxiaJS.digirisk.evaluationMethodEvarisk.event();
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.event = function() {
	jQuery( document ).on( 'click', '.popup.popup-evaluation.active tr td', window.eoxiaJS.digirisk.evaluationMethodEvarisk.select_variable );
	jQuery( document ).on( 'click', '.popup.popup-evaluation.active .button.green', window.eoxiaJS.digirisk.evaluationMethodEvarisk.close_modal );
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.select_variable = function( event ) {
	var element = jQuery( this );
	if ( '' !== element.data( 'seuil-id' ) ) {
		jQuery( '.popup.popup-evaluation.active tr td[data-variable-id="' + element.data( 'variable-id' ) + '"]' ).removeClass( 'active' );
		element.addClass( 'active' );
		jQuery( '.popup.popup-evaluation.active input.variable-' + element.data( 'variable-id' ) ).val( element.data( 'seuil-id' ) );
	}

	var listVariable = {};
	var length = 0;

	var data = {
		action: 'get_scale',
		_wpnonce: element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .button.green' ).data( 'nonce' ),
		list_variable: listVariable
	};

	element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible input[type="hidden"]:not(.digi-method-evaluation-id)' ).each(function( key, f ) {
		listVariable[jQuery( f ).attr( 'variable-id' )] = jQuery( f ).val();
		if ( '' !== jQuery( f ).val() ) {
			length++;
		}
	} );

	if ( 5 === length ) {
		element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .cotation' ).addClass( 'loading' );
		jQuery.post( window.ajaxurl, data, function( response ) {
			element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .cotation' ).removeClass( 'loading' );
			element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .cotation' )[0].className = element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .cotation' )[0].className.replace( /level[-1]?[0-4]/, 'level' + response.data.scale );
			element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible .cotation span' ).text( response.data.equivalence );
		} );
	}
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.close_modal = function( event ) {
	var element = jQuery( this );

  var listVariable = {};
	var length = 0;

	var data = {
		action: 'get_scale',
		_wpnonce: element.data( 'nonce' ),
		list_variable: listVariable
	};

	element.closest( '.risk-row' ).find( '.popup.popup-evaluation:visible input[type="hidden"]:not(.digi-method-evaluation-id)' ).each(function( key, f ) {
		listVariable[jQuery( f ).attr( 'variable-id' )] = jQuery( f ).val();
		if ( '' !== jQuery( f ).val() ) {
			length++;
		}
	} );

	jQuery( '.cotation-container .content.active' ).removeClass( 'active' );
	if ( 5 === length ) {
		element.closest( '.risk-row' ).find( '.cotation' ).addClass( 'loading' );
		element.closest( '.risk-row' ).find( '.cotation-container.tooltip' ).removeClass( 'active' );

		jQuery.post( window.ajaxurl, data, function( response ) {
			element.closest( '.popup.popup-evaluation' ).removeClass( 'active' );

			// Rend le bouton "active".
			if ( -1 != element.closest( 'tr' ).find( 'input.input-hidden-danger' ).val() ) {
				element.closest( 'tr' ).find( '.action .button.disable' ).removeClass( 'disable' ).addClass( 'blue' );
			}

			element.closest( '.risk-row' ).find( 'input.input-hidden-method-id' ).val( element.closest( '.popup.popup-evaluation' ).find( 'input.digi-method-evaluation-id' ).val() );
			element.closest( '.risk-row' ).find( 'input[name="risk[evaluation][scale]"]' ).val( response.data.scale );

			element.closest( '.risk-row' ).find( '.cotation-container .action span' ).html( response.data.equivalence );
			element.closest( '.risk-row' ).find( '.cotation-container .action i' ).hide();
			element.closest( '.risk-row' ).find( '.cotation' ).removeClass( 'loading' );

			element.closest( '.risk-row' ).find( '.cotation-container .action' )[0].className = element.closest( '.risk-row' ).find( '.cotation-container .action' )[0].className.replace( /level[-1]?[0-4]/, 'level' + response.data.scale );
			element.closest( '.risk-row' ).find( 'input[name="risk_evaluation_level"]' ).val( response.data.scale );
		} );
	} else {
		jQuery( '.popup.popup-evaluation' ).removeClass( 'active' );
	}
	return false;
};

/**
 * Initialise l'objet "evaluator" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.evaluator = {};

window.eoxiaJS.digirisk.evaluator.init = function() {
	window.eoxiaJS.digirisk.evaluator.event();
};

window.eoxiaJS.digirisk.evaluator.event = function() {
	jQuery( document ).on( 'click', '.digirisk-wrap table.evaluators input[type="checkbox"]', window.eoxiaJS.digirisk.evaluator.setTime );
	jQuery( document ).on( 'click', '.form-edit-evaluator-assign .wp-digi-pagination a', window.eoxiaJS.digirisk.evaluator.pagination );
};

/**
 * Lorsque que l'utilisateur coche la checkbox "affecter", la valeur dans le champ de texte du header du tableau est remplis dans le champs à gauche de la checkbox.
 *
 * @param {MouseEvent} event Le clique de la souris.
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.evaluator.setTime = function( event ) {
	var element = jQuery( this );
	element.closest( 'tr' ).find( 'input.affect' ).val( jQuery( '.table.evaluators input[type="text"]' ).val() );
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_evaluator_assign".
 * Remplaces le contenu du tableau "affected-evaluator" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.evaluator.callback_edit_evaluator_assign_success = function( triggeredElement, response ) {
	jQuery( 'table.affected-evaluator' ).replaceWith( response.data.template );
};

/**
 * Le callback en cas de réussite à la requête Ajax "detach_evaluator".
 * Remplaces le contenu du tableau "affected-evaluator" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLAnchorElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}            response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.evaluator.callback_detach_evaluator_success = function( triggeredElement, response ) {
	jQuery( 'table.affected-evaluator' ).replaceWith( response.data.template );
};

/**
 * Gestion de la pagination des évalateurs.
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.evaluator.pagination = function( event ) {
	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var nextPage = href[1].replace( 'current_page=', '' );
	var elementId = href[2].replace( 'element_id=', '' );

	jQuery( '.main-content .form-edit-evaluator-assign' ).addClass( 'loading' );

	var data = {
		action: 'paginate_evaluator',
		element_id: elementId,
		next_page: nextPage
	};

	event.preventDefault();

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.main-content .grid-layout' ).replaceWith( view );
	} );
};

/**
 * Gères l'export en CSV
 *
 * @author Jimmy Latour <jimmy@evarisk.com>
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 *
 * @memberof export
 */

/**
 * Initialise l'objet exportCSV dans l'objet digirisk
 * @memberof export
 * @type {Object}
 */
window.eoxiaJS.digirisk.exportCSV = {};

/**
 * La méthode init est appelé automatiquement
 *
 * @since 6.1.5.5
 * @version 6.2.1.2
 *
 * @memberof exportCSV
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.exportCSV.init = function() {
	window.eoxiaJS.digirisk.exportCSV.event();
};

/**
 * Initialies les évènements submit et change
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 *
 * @memberof exportCSV
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.exportCSV.event = function() {
	jQuery( document ).on( 'click', '#digi-export-csv-form button.blue', window.eoxiaJS.digirisk.exportCSV.makeExport );
};

/**
 * Utilises ajaxSubmit pour envoyer le formulaire en AJAX.
 *
 * @param  {ClickEvent} event L'évènement du clic.
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.exportCSV.makeExport = function( event ) {
	var button = jQuery( this );
	event.preventDefault();
	jQuery( this ).closest( 'form' ).ajaxSubmit( {
		'beforeSubmit': function() {
			button.addClass( 'loading' );
		},
		success: function( response ) {
			button.closest( 'form' ).find( 'progress' ).attr( 'max', response.data.number_risks );
			button.closest( 'form' ).find( 'progress' ).val( ( response.data.offset / response.data.number_risks ) * response.data.number_risks );
			if ( response.data.end ) {
				button.removeClass( 'loading' );
				window.eoxiaJS.global.downloadFile( response.data.url_to_file, response.data.filename );
				jQuery( '#digi-export-csv-form input[name="offset"]' ).val( 0 );
				jQuery( '#digi-export-csv-form input[name="filepath"]' ).val( '' );
				jQuery( '#digi-export-csv-form input[name="filename"]' ).val( '' );
				jQuery( '#digi-export-csv-form input[name="number_risks"]' ).val( 0 );
				jQuery( '#digi-export-csv-form input[name="url_to_file"]' ).val( '' );
			} else {
				jQuery( '#digi-export-csv-form input[name="offset"]' ).val( response.data.offset );
				jQuery( '#digi-export-csv-form input[name="filepath"]' ).val( response.data.filepath );
				jQuery( '#digi-export-csv-form input[name="filename"]' ).val( response.data.filename );
				jQuery( '#digi-export-csv-form input[name="number_risks"]' ).val( response.data.number_risks );
				jQuery( '#digi-export-csv-form input[name="url_to_file"]' ).val( response.data.url_to_file );

				jQuery( '#digi-export-csv-form button.blue' ).click();
			}
		}
	} );
};

/**
 * Gères l'export et l'import des modèles de donnée de DigiRisk
 *
 * @author Jimmy Latour <jimmy@evarisk.com>
 *
 * @since 6.1.5.5
 * @version 6.2.1.2
 *
 * @memberof export
 */

/**
 * Initialise l'objet export dans l'objet digirisk
 * @memberof export
 * @type {Object}
 */
window.eoxiaJS.digirisk.export = {};

/**
 * La méthode init est appelé automatiquement
 *
 * @since 6.1.5.5
 * @version 6.2.1.2
 *
 * @memberof export
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.export.init = function() {
	window.eoxiaJS.digirisk.export.event();
};

/**
 * Initialies les évènements submit et change
 *
 * @since 6.1.5.5
 * @version 6.2.1.2
 *
 * @memberof export
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.export.event = function() {
	jQuery( document ).on( 'submit', '#digi-data-export #digi-export-form', window.eoxiaJS.digirisk.export.create_export );
	jQuery( document ).on( 'change', '#digi-data-export #digi-import-form input[type="file"]', window.eoxiaJS.digirisk.export.make_import );
};

/**
 * Lances la requête XHR pour créer le fichier .zip de l'export du modèle de donnée.
 *
 * @since 6.1.5.5
 * @version 6.2.5.0
 *
 * @param  {Object} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.export.create_export = function( event ) {
	var form = jQuery( this );
	event.preventDefault();
	jQuery( this ).closest( 'form' ).ajaxSubmit( {
		'beforeSubmit': function() {
			form.find( 'button' ).addClass( 'loading' );
		},
		success: function( response ) {
			form.find( 'button' ).removeClass( 'loading' );
			window.eoxiaJS.global.downloadFile( response.data.url_to_file, response.data.filename );
		}
	} );
},

/**
 * Prépare la première requête pour importer un modèle de donnée.
 *
 * @since 6.1.5.5
 * @version 6.2.5.0
 *
 * @param  {[type]} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.export.make_import = function( event ) {
	var data = new FormData();

	event.preventDefault();

	data.append( 'file', jQuery( this )[0].files[0] );
	data.append( 'action', 'digi_import_data' );
	data.append( '_wpnonce', jQuery( this ).closest( 'form' ).find( 'input[name="_wpnonce"]' ).val() );
	data.append( 'index_element', 0 );

	window.eoxiaJS.digirisk.export.request_import( data );
},

/**
 * Lances la requête pour importer un modèle de donnée.
 * Modifie la barre de progression.
 *
 * @since 6.1.5.5
 * @version 6.2.5.0
 *
 * @param  {object} data Les données pour la requête
 * @return {void}
 */
window.eoxiaJS.digirisk.export.request_import = function( data ) {
	jQuery.ajax( {
		url: ajaxurl,
		data: data,
		processData: false,
		contentType: false,
		type: 'POST',
		beforeSend: function() {
			jQuery( '.digi-import-detail' ).html( window.digi_tools_in_progress );
		},
		success: function( response ) {
			var data = new FormData();

			if ( response.success ) {
				jQuery( 'progress' ).attr( 'max', response.data.count_element );
				jQuery( 'progress' ).val( ( response.data.index_element / response.data.count_element ) * response.data.count_element );

				if ( ! response.data.end ) {
					data.append( 'action', 'digi_import_data' );
					data.append( '_wpnonce', jQuery( '#digi-import-form' ).find( 'input[name="_wpnonce"]' ).val() );
					data.append( 'path_to_json', response.data.path_to_json );
					data.append( 'index_element', response.data.index_element );
					jQuery( '.digi-import-detail' ).html( window.digi_tools_in_progress );
					window.eoxiaJS.digirisk.export.request_import( data );
				} else {
					jQuery( '.digi-import-detail' ).html( window.digi_tools_done );
					if ( jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ) ) {
						jQuery( '#toplevel_page_digi-setup a' ).attr( 'href', jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ).replace( 'digi-setup', 'digirisk-simple-risk-evaluation' ) );
					}

					jQuery( 'progress' ).attr( 'max', 100 );
					jQuery( 'progress' ).val( 100 );
				}
			} else {
				alert( 'Problème lors de l\'importation du modèle' );
			}
		}
	} );
};

/**
 * Initialise l'objet "gallery" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.gallery = {};

window.eoxiaJS.digirisk.gallery.init = function() {
	window.eoxiaJS.digirisk.gallery.event();
};

window.eoxiaJS.digirisk.gallery.event = function() {
	jQuery( document ).on( 'keyup', window.eoxiaJS.digirisk.gallery.keyup );
	jQuery( document ).on( 'click', '.gallery', function( event ) { event.preventDefault(); return false; } );
	jQuery( document ).on( 'click', '.gallery .navigation .prev', window.eoxiaJS.digirisk.gallery.prevPicture );
	jQuery( document ).on( 'click', '.gallery .navigation .next', window.eoxiaJS.digirisk.gallery.nextPicture );
	jQuery( document ).on( 'click', '.gallery .close', window.eoxiaJS.digirisk.gallery.close );
};

window.eoxiaJS.digirisk.gallery.keyup = function( event ) {
	if ( 37 === event.keyCode ) {
		window.eoxiaJS.digirisk.gallery.prevPicture();
	} else if ( 39 === event.keyCode ) {
		window.eoxiaJS.digirisk.gallery.nextPicture();
	} else if ( 27 === event.keyCode ) {
		jQuery( '.gallery .close' ).click();
	}
};

window.eoxiaJS.digirisk.gallery.open = function( element, elementId, type, namespace ) {
	var data = {
		action: 'load_gallery',
		id: elementId,
		type: type,
		namespace: namespace
	};

	element.addClass( 'loading' );

	jQuery.post( ajaxurl, data, function( response ) {
		element.removeClass( 'loading' );
		jQuery( '.digirisk-wrap' ).append( response.data.view );
	});
};

window.eoxiaJS.digirisk.gallery.prevPicture = function( event ) {
	if ( jQuery( '.gallery .image-list li.current' ).prev().length <= 0 ) {
		jQuery( '.gallery .image-list li.current' ).toggleClass( 'current hidden' );
		jQuery( '.gallery .image-list li:last' ).toggleClass( 'hidden current' );
	}	else {
		jQuery( '.gallery .image-list li.current' ).toggleClass( 'current hidden' ).prev().toggleClass( 'hidden current' );
	}

	jQuery( '.gallery .edit-thumbnail-id' ).attr( 'data-thumbnail-id', jQuery( '.gallery .current' ).attr( 'data-id' ) );
};

window.eoxiaJS.digirisk.gallery.nextPicture = function( event ) {
	if ( jQuery( '.gallery .image-list li.current' ).next().length <= 0 ) {
		jQuery( '.gallery .image-list li.current' ).toggleClass( 'current hidden' );
		jQuery( '.gallery .image-list li:first' ).toggleClass( 'hidden current' );
	} else {
		jQuery( '.gallery .image-list li.current' ).toggleClass( 'current hidden' ).next().toggleClass( 'hidden current' );
	}

	jQuery( '.gallery .edit-thumbnail-id' ).attr( 'data-thumbnail-id', jQuery( '.gallery .current' ).attr( 'data-id' ) );
};

window.eoxiaJS.digirisk.gallery.close = function( event ) {
	jQuery( '.gallery' ).remove();
};

/**
 * Le callback en cas de réussite à la requête Ajax "dessociate_file".
 * Remplaces les boutons pour ouvrir la popup "galerie"
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.gallery.dessociatedFileSuccess = function( element, response ) {
	if ( response.data.closePopup ) {
		jQuery( '.gallery' ).remove();
	}

	jQuery( '.gallery .image-list .current' ).remove();
	jQuery( '.gallery .prev' ).click();
	jQuery( '.main-container .main-header .unit-header .media img' ).replaceWith( response.data.view );
	jQuery( '.navigation-container span[data-id="' + response.data.elementId + '"] img' ).replaceWith( response.data.view );
	jQuery( '.navigation-container .workunit-list span[data-id="' + response.data.elementId + '"] img' ).replaceWith( response.data.view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "eo_set_thumbnail".
 * Remplaces les boutons pour ouvrir la popup "galerie"
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.gallery.successfulSetThumbnail = function( element, response ) {
	jQuery( '.media[data-id="' + response.data.elementId + '"] img' ).replaceWith( response.data.template );
	jQuery( '.navigation-container span[data-id="' + response.data.elementId + '"] img' ).replaceWith( response.data.template );
	jQuery( '.navigation-container .workunit-list span[data-id="' + response.data.elementId + '"] img' ).replaceWith( response.data.template );
};

/**
 * Initialise l'objet "media" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.media = {
	file_frame: undefined,
	element_id: undefined,
	have_thumbnail: undefined,
	object_name: undefined,
	_wpnonce: undefined,
	element: undefined
};

/**
 * Appel la méthode "event"
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.media.init = function() {
  window.eoxiaJS.digirisk.media.event();
};

window.eoxiaJS.digirisk.media.event = function() {
  jQuery( document ).on( 'click', '.media:not(.loading), .upload-model', window.eoxiaJS.digirisk.media.open_popup );
};

window.eoxiaJS.digirisk.media.open_popup = function( event ) {
	var element = jQuery( this );

  event.preventDefault();

  window.eoxiaJS.digirisk.media.element = jQuery( this );
  window.eoxiaJS.digirisk.media.element_id = element.data( 'id' );
  window.eoxiaJS.digirisk.media._wpnonce = element.data( 'nonce' );
  window.eoxiaJS.digirisk.media.title = element.data( 'title' );
  window.eoxiaJS.digirisk.media.object_name = element.data( 'object-name' );
  window.eoxiaJS.digirisk.media.type = element.data( 'type' );
  window.eoxiaJS.digirisk.media.namespace = element.data( 'namespace' );
  window.eoxiaJS.digirisk.media.action = element.data( 'action' );
  window.eoxiaJS.digirisk.media.have_thumbnail = element.hasClass( 'wp-digi-element-thumbnail' ) ? true : false;
  window.wp.media.model.settings.post.id = element.data( 'id' );

  if ( 0 === element.find( '.wp-digi-element-thumbnail' ).length ) {
    window.eoxiaJS.digirisk.media.load_media_upload( element, element.data( 'id' )  );
  } else {
    window.eoxiaJS.digirisk.gallery.open( element, element.data( 'id' ), element.data( 'type' ), element.data( 'namespace' ) );
  }
};

window.eoxiaJS.digirisk.media.load_media_upload = function( element, post_id ) {
  if ( !window.eoxiaJS.digirisk.media.file_frame ) {
    window.eoxiaJS.digirisk.media.file_frame = new window.wp.media.view.MediaFrame.Post( {
      title: jQuery( element ).data( 'uploader_title' ),
      button: {
        text: jQuery( element ).data( 'uploader_button_text' ),
      },
      multiple: false
    } );
    window.eoxiaJS.digirisk.media.file_frame.el.className += ' digi-upload-' + post_id;
    window.eoxiaJS.digirisk.media.file_frame.on( "insert", function() { window.eoxiaJS.digirisk.media.selected_file( element ); } );
  }

  window.eoxiaJS.digirisk.media.open_media_upload();
};

window.eoxiaJS.digirisk.media.open_media_upload = function() {
  window.eoxiaJS.digirisk.media.file_frame.open();
  return;
};

window.eoxiaJS.digirisk.media.selected_file = function( element ) {
  var selected_file = window.eoxiaJS.digirisk.media.file_frame.state().get( 'selection' );
  var selected_JSON;
  var selected_file_id;
  selected_file.map( function( attachment ) {
    selected_JSON = attachment.toJSON();
    selected_file_id = attachment.id;
  } );

  if ( window.eoxiaJS.digirisk.media.element_id === 0 && window.eoxiaJS.digirisk.media.action != 'eo_set_model' ) {
    window.eoxiaJS.digirisk.media.display_attachment( selected_JSON, element );
  } else {
    window.eoxiaJS.digirisk.media.associate_file( selected_file_id );
  }
};

window.eoxiaJS.digirisk.media.display_attachment = function( selected_JSON, element ) {
  window.eoxiaJS.digirisk.media.element.find( 'img' ).attr( 'src', selected_JSON.sizes.thumbnail.url ).show();

  window.eoxiaJS.digirisk.media.element.find( 'i' ).hide();
  window.eoxiaJS.digirisk.media.element.find( 'input.input-file-image' ).val( selected_JSON.id );
};

window.eoxiaJS.digirisk.media.associate_file = function( selectedFileId ) {
	if ( 'eo_set_model' === window.eoxiaJS.digirisk.media.action ) {
		jQuery( '.upload-model[data-type="' + window.eoxiaJS.digirisk.media.type + '"]' ).addClass( 'loading' );
	} else {
		jQuery( 'span.media[data-id="' + window.eoxiaJS.digirisk.media.element_id + '"]' ).addClass( 'loading' );
	}

  var data = {
    action: window.eoxiaJS.digirisk.media.action,
    file_id: selectedFileId,
    _wpnonce: window.eoxiaJS.digirisk.media._wpnonce,
    title: window.eoxiaJS.digirisk.media.title,
    type: window.eoxiaJS.digirisk.media.type,
    namespace: window.eoxiaJS.digirisk.media.namespace,
    element_id: window.eoxiaJS.digirisk.media.element_id,
    object_name: window.eoxiaJS.digirisk.media.object_name,
    thumbnail: window.eoxiaJS.digirisk.media.have_thumbnail,
  };

  jQuery.post( window.ajaxurl, data, function( response ) {
    if ( response.data.type == 'set_model' ) {
      jQuery( '#digi-handle-model' ).html( response.data.template );
    }
    else {
      jQuery( 'span.media[data-id="'+ window.eoxiaJS.digirisk.media.element_id + '"]' ).replaceWith( response.data.template );
			jQuery( '.gallery' ).remove();
    }
  });
};

/**
 * Initialise l'objet "group" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.group = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.group.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "create_group".
 * Remplaces le contenu de toute l'application par la vue renvoyé par la requête Ajax.
 * Clic ensuite sur le nouveau groupement pour lancer la requête "load_society".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.group.createdGroupSuccess = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
	jQuery( '.workunit-navigation span.action-attribute[data-groupment-id="' + response.data.groupment_id + '"]' ).click();
};

/**
 * Initialise l'objet "handleModel" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.5.0
 */

window.eoxiaJS.digirisk.handleModel = {};

window.eoxiaJS.digirisk.handleModel.init = function() {
	window.eoxiaJS.digirisk.handleModel.event();
};

/**
 * Les évènements
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.handleModel.event = function() {};

/**
 * Après la requête AJAX qui ouvre la popup "Historique des modèles"
 *
 * @param  {HTMLAnchorElement} element  Le lien qui permet d'ouvrir la popup
 * @param  {Object}            response Les données de la réponse de la requête XHR
 * @return {void}
 */
window.eoxiaJS.digirisk.handleModel.loadedPopupHistoric = function( element, response ) {
	element.closest( '.block' ).find( '.popup .title' ).text( response.data.title );
	element.closest( '.block' ).find( '.popup .content' ).html( response.data.view );
	jQuery( '.container.loading' ).removeClass( 'loading' );
};

/**
 * Met à jour le bouton "Télécharger le modèle courant" de response.data.type
 * @param {HTMLAnchorElement} element  Le lien "Télécharger le modèle courant"
 * @param {void}
 */
window.eoxiaJS.digirisk.handleModel.reset_default_model_success = function( element, response ) {
	element.closest( '.block' ).find( '.wp-digi-bton-second' ).attr( 'href', response.data.url );
};

/**
 * Initialise l'objet "installer" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.7.0
 */

window.eoxiaJS.digirisk.installer = {};
window.eoxiaJS.digirisk.installer.progressInterval = undefined;

window.eoxiaJS.digirisk.installer.init = function() {
	window.eoxiaJS.digirisk.installer.event();
};

window.eoxiaJS.digirisk.installer.event = function() {
	jQuery( document ).on( 'keyup', '.wpdigi-installer input[name="groupment[title]"]', window.eoxiaJS.digirisk.installer.key_up_groupment_title );
	jQuery( document ).on( 'click', '.wpdigi-installer input[name="groupment[title]"]', window.eoxiaJS.digirisk.installer.emptyPlaceHolder );
	jQuery( document ).on( 'blur', '.wpdigi-installer input[name="groupment[title]"]', window.eoxiaJS.digirisk.installer.fillPlaceHolder );
	jQuery( document ).on( 'keyup', '.wpdigi-installer input.input-domain-mail, .user-dashboard input.input-domain-mail', window.eoxiaJS.digirisk.installer.key_up_domain_mail );
	jQuery( '.owl-carousel' ).owlCarousel( {
		'items': 1,
		'nav': true,
		'navText': [],
		'pagination': true,
		'autoHeight': true,
		'autoplay': true,
		'autoplayTimeout': 25000
	} );
};

window.eoxiaJS.digirisk.installer.key_up_groupment_title = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.main-content.society .action-input' ).click();
	}

	if ( jQuery( this ).val() != '' ) {
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '12%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 12 );
	}	else {
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '0%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 0 );
	}
};

window.eoxiaJS.digirisk.installer.emptyPlaceHolder = function( event ) {
	if ( '' === jQuery( this ).val() ) {
		jQuery( this ).closest( '.society-form' ).find( 'label' ).hide();
	}
};

window.eoxiaJS.digirisk.installer.fillPlaceHolder = function( event ) {
	if ( '' === jQuery( this ).val() ) {
		jQuery( this ).closest( '.society-form' ).find( 'label' ).show();
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '0%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 0 );
	}
};

window.eoxiaJS.digirisk.installer.key_up_domain_mail = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.wp-digi-action-save-domain-mail' ).click();
	}
};

/**
 * Vérifie que le nom de la société ne soit pas vide.
 *
 * @param  {HTMLDivElement} element Le bouton déclenchant la création de la société
 * @return {void}
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.installer.beforeCreateSociety = function( element ) {
	if ( '' === element.closest( 'form' ).find( 'input[name="groupment[title]"]' ).val() ) {
		element.closest( 'form' ).find( 'span.tooltip' ).addClass( 'active' );
		return false;
	}

	element.closest( 'form' ).find( 'span.tooltip.active' ).removeClass( 'active' );

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_society".
 * Ferme la div "society". Changes l'étape de "Votre société" en "Composants".
 * Ouvre la div "wpdigi-components".
 * Appel la méthode "requestInstallComponent".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.installer.savedSociety = function( element, response ) {
	jQuery( '.wpdigi-installer .bloc-create-society' ).hide();
	jQuery( '.wpdigi-installer .wpdigi-components' ).show();
	jQuery( '.wpdigi-installer .button.blue' ).hide();
	jQuery( '.wpdigi-installer .button.green' ).show();
	jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '25%' );
	jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 25 );
	jQuery( '.wpdigi-installer .step-list .step[data-width="' + 25 + '"]' ).addClass( 'active' );
	window.eoxiaJS.digirisk.installer.requestInstallComponent();
};

/**
 * Envoie une requête pour installer les composants nécessaires à l'utilisation de DigiRisk.
 * @return {void}
 */
window.eoxiaJS.digirisk.installer.requestInstallComponent = function() {
	var _wpnonce = jQuery( '.wpdigi-installer .wpdigi-components .nonce-installer-components' ).val();
	window.eoxiaJS.request.get( ajaxurl + '?action=installer_components&_wpnonce=' + _wpnonce );
};

/**
 * Le callback en cas de réussite à la requête Ajax "installer_components".
 * Met le li active en statut "finit" et passes au suivant, tout en relancant la requête pour installer le composant suivant.
 * Si tous les li sont en statut "finit" passes à l'étape suivante qui est "Création des utilisateurs"
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.7.0
 */
window.eoxiaJS.digirisk.installer.installedComponentSuccess = function( response ) {
	// Si l'installation n'est pas terminée, on relance une requête avec les prochains composants à installer.
	if ( ! response.data.core_option.installed ) {
		if ( ! response.data.core_option.recommendation_installed && response.data.core_option.danger_installed ) {
			window.eoxiaJS.digirisk.installer.progressBar( 55 );
		} else if ( response.data.core_option.recommendation_installed ) {
			window.eoxiaJS.digirisk.installer.progressBar( 80 );
		}
		window.eoxiaJS.digirisk.installer.requestInstallComponent();
	} else {
		window.eoxiaJS.digirisk.installer.progressBar( 100 );

		jQuery( '.wpdigi-installer .wpdigi-components .next' ).removeClass( 'disabled' );
		if ( 0 < jQuery( '#toplevel_page_digi-setup a' ).length ) {
			jQuery( '#toplevel_page_digi-setup a' ).attr( 'href', jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ).replace( 'digi-setup', 'digirisk-simple-risk-evaluation' ) );
		}
	}

	// jQuery( '.wpdigi-components progress' ).attr( 'value', progressValue );
};

window.eoxiaJS.digirisk.installer.progressBar = function( pourcent ) {
	clearInterval( window.eoxiaJS.digirisk.installer.progressInterval );
	window.eoxiaJS.digirisk.installer.progressInterval = undefined;

	window.eoxiaJS.digirisk.installer.progressInterval = setInterval( function() {
		var currentWidth = jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width' );
		currentWidth++;

		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width', currentWidth + '%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', currentWidth );

		jQuery( '.wpdigi-installer .step-list .step[data-width="' + currentWidth + '"]' ).addClass( 'active' );

		if ( jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width' ) >= pourcent ) {
			clearInterval( window.eoxiaJS.digirisk.installer.progressInterval );
			window.eoxiaJS.digirisk.installer.progressInterval = undefined;

			if ( pourcent === 100 ) {
				jQuery( '.wpdigi-installer .button.green.disable' ).removeClass( 'disable' );
			}
		}
	}, 100 );
};

/**
 * Initialise l'objet "legalDisplay" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.legalDisplay = {};

window.eoxiaJS.digirisk.legalDisplay.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "save_legal_display".
 * Actualises la vue en cliquant sur l'onglet "Affichage légal".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.legalDisplay.generatedSuccess = function() {
	jQuery( '.tab-element[data-action="digi-legal_display"]' ).click();
	window.scrollTo( 0, 0 );
};

/**
 * Initialise l'objet "navigation" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.6.0
 */

window.eoxiaJS.digirisk.navigation = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.navigation.init = function() {
	window.eoxiaJS.digirisk.navigation.event();
};

/**
 * La méthode contenant tous les évènements pour la navigation.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.navigation.event = function() {
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .content li span.action-attribute', window.eoxiaJS.digirisk.navigation.setItemActiveInToggle );
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .workunit-list li span.action-attribute', window.eoxiaJS.digirisk.navigation.setItemActiveInWorkunitList );

	jQuery( document ).on( 'keyup', '.digirisk-wrap .navigation-container .workunit-add input.title', window.eoxiaJS.digirisk.navigation.keyUpOnWorkunitTitle );
};

/**
 * Ajoutes la classe "active" sur l'item cliqué dans le toggle de la navigation.
 *
 * @return {void}
 *
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.navigation.setItemActiveInToggle = function( event ) {
	jQuery( '.digirisk-wrap .navigation-container .content div.active' ).removeClass( 'active' );
	jQuery( this ).closest( 'div' ).addClass( 'active' );
};

/**
 * Ajoutes la classe "active" sur l'item cliqué dans la liste des unités de travail de la navigation.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.navigation.setItemActiveInWorkunitList = function( event ) {
	jQuery( '.digirisk-wrap .navigation-container .workunit-list li.active' ).removeClass( 'active' );
	jQuery( this ).closest( 'li' ).addClass( 'active' );
};

/**
 * Ajoutes la classe "blue" sur l'input action dans l'ajout d'une unité de travail.
 *
 * @param  {KeyboardEvent} event L'état du clavier.
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.navigation.keyUpOnWorkunitTitle = function( event ) {
	if ( jQuery( this ).val().length > 0 ) {
		jQuery( '.digirisk-wrap .navigation-container .workunit-add .action-input.disable' ).removeClass( 'disable' ).addClass( 'blue' );
	} else {
		jQuery( '.digirisk-wrap .navigation-container .workunit-add .action-input' ).removeClass( 'blue' ).addClass( 'disable' );
	}
};

/**
 * Méthodes appelé avant la création d'un nouvelle unité de travail.
 * Vérifies si le champ de texte est vide. Si c'est le cas, affiches l'infobulle pour dire qu'il est obligatoire.
 *
 * @param  {ClickEvent} element L'élément déclenchant l'action.
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.navigation.beforeSaveWorkunit = function( element ) {
	if ( '' === element.closest( '.workunit-add' ).find( 'input.title' ).val() ) {
		element.closest( '.workunit-add' ).addClass( 'active' );
		return false;
	}

	element.closest( '.workunit-add.active' ).removeClass( 'active' );
	return true;
};

window.eoxiaJS.page_sorter = {};
window.evaMenu = {};
window.evaMenu.depth = 0;
window.evaMenu.prev = undefined;
window.evaMenu.startDepth = 0;
window.evaMenu.childs = [];
window.eoxiaJS.page_sorter.init = function() {
	var menu = jQuery( '.sorter-page .menu' );

	jQuery( '.sorter-page .menu' ).sortable( {
		handle: '.menu-item-handle',
		placeholder: 'sortable-placeholder',
		items: '> *',
		start: function( e, ui ) {
			window.evaMenu.startDepth = parseInt( ui.item.attr( 'data-depth' ) );
			window.evaMenu.childs = window.evaMenu.getChildItems(ui.item);
			ui.item.children( '.menu-item-transport' ).append( window.evaMenu.childs );
		},
		sort: function(e, ui) {
			var menuEdge = jQuery( '#menu-to-edit' ).offset().left;
			var offset = ui.helper.offset();
			var edge = offset.left - menuEdge;
			window.evaMenu.depth = Math.floor(edge / 30);

			window.evaMenu.prev = ui.placeholder.prev( 'li' );
			var next = ui.placeholder.next( 'li' );

			if( window.evaMenu.prev[0] == ui.item[0] ) window.evaMenu.prev = window.evaMenu.prev.prev( 'li' );
			if( next[0] == ui.item[0] ) next = next.next( 'li' );

			var prevDepth = 0;

			if (window.evaMenu.prev && window.evaMenu.prev.attr('class')) {
				prevDepth = parseInt( window.evaMenu.prev.attr( 'data-depth' ) );
			}

			var nextDepth = 0;

			if (next && next.attr('class')) {
				nextDepth = parseInt( next.attr( 'data-depth' ) );
			}

			if (window.evaMenu.depth < prevDepth) {
				window.evaMenu.depth = prevDepth;
			}
			else if (window.evaMenu.depth > prevDepth + 1) {
				window.evaMenu.depth = prevDepth + 1;
			}

			if (nextDepth - window.evaMenu.depth == 1) {
				window.evaMenu.depth = prevDepth + 1;
			}

			if (!window.evaMenu.prev.data('drop')) {
				window.evaMenu.depth = prevDepth;
			}

			ui.placeholder[0].className = 'menu-item-depth-' + window.evaMenu.depth + ' sortable-placeholder';
		},
		stop: function(e, ui) {
			ui.item[0].className = 'menu-item-depth-' + window.evaMenu.depth;
			ui.item.attr( 'data-depth', window.evaMenu.depth );

			if (!ui.item.data('drop')) {
				ui.item[0].className += " no-drop";
			}

			window.evaMenu.childs.insertAfter( ui.item );

			var diffDepth = window.evaMenu.depth - window.evaMenu.startDepth;

			if (window.evaMenu.childs.length > 0) {
				for ( var i = 0; i < window.evaMenu.childs.length; i++ ) {
					if (window.evaMenu.childs[i]) {
						var currentDepth = parseInt( jQuery( window.evaMenu.childs[i] ).attr( 'data-depth' ) );
						var newDepth = currentDepth + diffDepth;

						window.evaMenu.childs[i].className = 'menu-item-depth-' + newDepth;
						jQuery( window.evaMenu.childs[i] ).attr( 'data-depth', newDepth );
						if (! jQuery( window.evaMenu.childs[i] ).data('drop')) {
							window.evaMenu.childs[i].className += " no-drop";
						}
					}
				}
			}

			window.evaMenu.updateParentId(ui.item);
		}
	}	);
};

window.evaMenu.getChildItems = function(ui) {
	var result = jQuery();
	ui.each( function() {
		var t = jQuery(this);
		var depth = parseInt( t.attr( 'data-depth' ) );
		var next = t.next( 'li' ).next('li');

		if (next.attr( 'class' )) {
			var nextDepth = parseInt( next.attr( 'data-depth' ) );

			while( next.length && nextDepth > depth ) {
				result = result.add( next );
				next = next.next( 'li' );
				if (next && next.attr( 'class' )) {
					nextDepth = parseInt( next.attr( 'data-depth' ) );
				}
			}
		}

	} );
	return result;
}

window.evaMenu.updateParentId = function( item ) {
	var parentId = 0;
	var itemDepth = parseInt( jQuery( item ).attr( 'data-depth' ) );
	var prevDepth = itemDepth - 1;
	var parent = undefined;

	console.log(itemDepth);

	if ( prevDepth >= 0 ) {
		parent = item.prevAll( '.menu-item-depth-' + prevDepth ).first();
		parentId = parent.find( '.menu-item-data-db-id' ).val();
	}

	item.find( '.menu-item-data-parent-id' ).val( parentId );
}

window.eoxiaJS.digirisk.recommendation = {};

window.eoxiaJS.digirisk.recommendation.init = function() {
	window.eoxiaJS.digirisk.recommendation.event();
};

window.eoxiaJS.digirisk.recommendation.event = function() {
	jQuery( document ).on( 'click', '.table.recommendation .categorie-container.recommendation .item', window.eoxiaJS.digirisk.recommendation.selectRecommendation );
};

/**
 * Lors du clic sur une recommendation, remplace le contenu du toggle par l'image de la recommendation sélectionnée.
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.selectRecommendation = function( event ) {
	var element = jQuery( this );
	element.closest( '.content' ).removeClass( 'active' );
	element.closest( 'tr' ).find( 'input.input-hidden-recommendation' ).val( element.data( 'id' ) );
	element.closest( '.toggle' ).find( '.action span' ).hide();
	element.closest( '.toggle' ).find( '.action img' ).show();
	element.closest( '.toggle' ).find( '.action img' ).attr( 'src', element.find( 'img' ).attr( 'src' ) );
	element.closest( '.toggle' ).find( '.action img' ).attr( 'srcset', '' );
	element.closest( '.toggle' ).find( '.action img' ).attr( 'sizes', '' );

	element.closest( '.recommendation-row' ).find( '.categorie-container' ).removeClass( 'active' );
	event.stopPropagation();

	element.closest( 'tr' ).find( '.action .button.disable' ).removeClass( 'disable' ).addClass( 'blue' );
};

/**
 * Vérifie que le champs "taxonomy[digi-recommendation][] soit différent de -1".
 *
 * @param  {HTMLDivElement} triggeredElement L'élément déclenchant l'action.
 * @return {bool}                            Si true, le formulaire est envoyé. Si false, on annule l'envoie du formulaire.
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.beforeSaveRecommendation = function( triggeredElement ) {

	// Remet à 0 les styles.
	triggeredElement.closest( '.recommendation-row' ).find( '.categorie-container' ).removeClass( 'active' );

	// Vérification du danger.
	if ( '-1' === triggeredElement.closest( '.recommendation-row' ).find( 'input[name="taxonomy[digi-recommendation][]"]' ).val() ) {
		triggeredElement.closest( '.recommendation-row' ).find( '.categorie-container' ).addClass( 'active' );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_recommendation".
 * Remplaces le contenu du tableau "recommendation" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.savedRecommendationSuccess = function( element, response ) {
	jQuery( 'table.recommendation' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.date.init();
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_recommendation".
 * Remplaces le contenu de la ligne du tableau "recommendation" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.loadedRecommendationSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.date.init();
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_recommendation".
 * Supprimes la ligne du tableau affectée par l'action.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.deletedRecommendationSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).fadeOut();
};

"use strict";

var digi_risk_comment = {
	$: undefined,

	event: function( $ ) {
		digi_risk_comment.$ = $;

    digi_risk_comment.$( document ).on( 'click', '.wp-digi-action-comment-delete', function( event ) { digi_risk_comment.delete_comment( event, digi_risk_comment.$( this ) ); } );
	},

  delete_comment: function( event, element ) {
    if( window.confirm( window.digi_confirm_delete ) ) {
      var data = {
        action: 'delete_comment',
        _wpnonce: digi_risk_comment.$( element ).data( 'nonce' ),
        risk_id: digi_risk_comment.$( element ).data( 'risk-id' ),
        id: digi_risk_comment.$( element ).data( 'id' ),
      };
      digi_risk_comment.$( element ).closest( 'li' ).remove();
      digi_risk_comment.$.post( window.ajaxurl, data, function() {} );
    }
  },

	reset_create_form: function() {
		digi_risk_comment.$( '.wp-digi-risk-item-new .wp-digi-risk-comment textarea' ).val('');
	}
};

/**
 * Initialise l'objet "risk_page" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.2.3.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.risk_page = {};

window.eoxiaJS.digirisk.risk_page.init = function() {
	window.eoxiaJS.digirisk.risk_page.event();
};

window.eoxiaJS.digirisk.risk_page.event = function() {
	jQuery( document ).on( 'click', '.risk-page .save-all:not(.grey)', window.eoxiaJS.digirisk.risk_page.saveRisks );
	jQuery( document ).on( 'click', '.risk-page table tr input:not(input[type="checkbox"]), .risk-page tr .toggle, .risk-page tr textarea, .risk-page tr .popup, .risk-page tr .action', window.eoxiaJS.digirisk.risk_page.checkTheCheckbox );

	jQuery( document ).on( 'click', '.risk-page .wp-digi-pagination a', window.eoxiaJS.digirisk.risk_page.pagination );
};

window.eoxiaJS.digirisk.risk_page.saveRisks = function( event ) {
	if ( event ) {
		event.preventDefault();
	}

	jQuery( '.risk-page tr  .edit-risk.checked:first' ).click();
	jQuery( '.risk-page .save-all' ).removeClass( 'green' ).addClass( 'disable' );
};

/**
 * Coches la case à cocher lors de l'action dans une ligne du tableau.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 6.2.3.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.risk_page.checkTheCheckbox = function( event ) {
	jQuery( this ).closest( 'tr' ).find( 'input[type="checkbox"]' ).prop( 'checked', true );
	jQuery( this ).closest( 'tr' ).find( '.edit-risk' ).addClass( 'checked' );
	jQuery( '.risk-page .save-all' ).removeClass( 'disable' ).addClass( 'green' );
};

window.eoxiaJS.digirisk.risk_page.savedRiskSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.risk_page.saveRisks( undefined );
};


/**
 * Gestion de la pagination des risques dans la page "Risques".
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.risk_page.pagination = function( event ) {
	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var nextPage = href[1].replace( 'current_page=', '' );

	jQuery( '.risk-page' ).addClass( 'loading' );

	var data = {
		action: 'paginate_risk',
		next_page: nextPage
	};

	event.preventDefault();

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.risk-page' ).replaceWith( view );
	} );
};

/**
 * Initialise l'objet "risk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.risk = {};

window.eoxiaJS.digirisk.risk.init = function() {};

window.eoxiaJS.digirisk.risk.deletedRiskSuccess = function( element, response ) {
	element.closest( 'tr' ).fadeOut();
};

window.eoxiaJS.digirisk.risk.loadedRiskSuccess = function( element, response ) {
  element.closest( 'tr' ).replaceWith( response.data.template );
};

window.eoxiaJS.digirisk.risk.beforeSaveRisk = function( triggeredElement ) {

	// Remet à 0 les styles.
	triggeredElement.closest( '.risk-row' ).find( '.categorie-container.tooltip' ).removeClass( 'active' );
	triggeredElement.closest( '.risk-row' ).find( '.cotation-container.tooltip' ).removeClass( 'active' );

	// Vérification du danger.
	if ( '-1' === triggeredElement.closest( '.risk-row' ).find( 'input[name="risk[danger_id]"]' ).val() ) {
		triggeredElement.closest( '.risk-row' ).find( '.categorie-container.tooltip' ).addClass( 'active' );
		return false;
	}

	// Vérification de la cotation.
	if ( '-1' === triggeredElement.closest( '.risk-row' ).find( 'input[name="risk[evaluation][scale]"]' ).val() ) {
		triggeredElement.closest( '.risk-row' ).find( '.cotation-container.tooltip' ).addClass( 'active' );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_risk".
 * Remplaces le contenu du tableau "risk" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.risk.savedRiskSuccess = function( triggeredElement, response ) {
	triggeredElement.closest( 'table.risk' ).replaceWith( response.data.template );
};

/**
 * Le callback en cas de réussite à la requête Ajax "check_predefined_danger".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.2.9.0
 * @version 6.2.9.0
 */
window.eoxiaJS.digirisk.risk.checkedPredefinedDanger = function( triggeredElement, response ) {
	triggeredElement.closest( '.risk-row' ).replaceWith( response.data.view );
};

window.eoxiaJS.digirisk.search = {};

window.eoxiaJS.digirisk.search.init = function() {
	window.eoxiaJS.digirisk.search.event();
};

window.eoxiaJS.digirisk.search.tabChanged = function() {
	window.eoxiaJS.digirisk.search.event();
};

window.eoxiaJS.digirisk.search.renderChanged = function() {
	window.eoxiaJS.digirisk.search.event();
};

/**
 * Initialise l'évènement pour permettre aux champs de recherche de fonctionner
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.search.event = function() {
	/**
	* Paramètre à ajouter sur la balise html
	* int data-element-id : ID d'un élément ex: workunit_id
	* string data-callback : Pour appeler une fonction après avoir récupére la liste des ID des utilisateurs.
	* string append-to : Le bloc ou sera affiche le rendu
	*/
	jQuery.each( jQuery( '.search input, .digi-search' ), function( key, element ) {
		// Automatiser la source.
		var listOption = {
			'source': 'admin-ajax.php?action=digi_search' +
			'&next_action=' + jQuery( element ).data( 'next-action' ) +
			'&field=' + jQuery( element ).data( 'field' ) +
			'&class=' + jQuery( element ).data( 'class' ) +
			'&id=' + jQuery( element ).data( 'id' ) +
			'&type=' + jQuery( element ).data( 'type' ),
			'minLength': 0
		};

		if ( jQuery( element ).data( 'target' ) ) {
			listOption.search = function( event, ui ) {
				jQuery( '.' + jQuery( element ).data( 'target' ) ).addClass( 'loading' );
			};

			listOption.response = function( event, response ) {
				jQuery( '.' + jQuery( element ).data( 'target' ) ).replaceWith( response.content[1].template );
			};

			listOption.open = function( event, ui ) {
				jQuery( element ).autocomplete( 'close' );
			};
		}

		if ( jQuery( element ).data( 'field' ) ) {
			listOption.select = function( event, ui ) {
				jQuery( 'input[name="' + jQuery( element ).data( 'field' ) + '"]' ).val( ui.item.id );
			};
		}

		jQuery( element ).autocomplete( listOption );
	} );
};

/**
 * Initialise l'objet "setting" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.9.0
 */
window.eoxiaJS.digirisk.setting = {};

window.eoxiaJS.digirisk.setting.init = function() {
	window.eoxiaJS.digirisk.setting.event();
};

window.eoxiaJS.digirisk.setting.event = function() {
	jQuery( document ).on( 'click', '#digi-danger-preset .save-all:not(.grey)', window.eoxiaJS.digirisk.setting.savePresetRisks );
	jQuery( document ).on( 'click', '#digi-danger-preset table tr input:not(input[type="checkbox"]), #digi-danger-preset tr .toggle, #digi-danger-preset tr textarea, #digi-danger-preset tr .popup, #digi-danger-preset tr .action', window.eoxiaJS.digirisk.setting.checkTheCheckbox );
};

window.eoxiaJS.digirisk.setting.savePresetRisks = function( event ) {
	if ( event ) {
		event.preventDefault();
	}

	jQuery( '#digi-danger-preset tr  .edit-risk.checked:first' ).click();
	jQuery( '#digi-danger-preset .save-all' ).removeClass( 'green' ).addClass( 'disable' );
};

/**
 * Coches la case à cocher lors de l'action dans une ligne du tableau.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 6.2.3.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.setting.checkTheCheckbox = function( event ) {
	jQuery( this ).closest( 'tr' ).find( 'input[type="checkbox"]' ).prop( 'checked', true );
	jQuery( this ).closest( 'tr' ).find( '.edit-risk' ).addClass( 'checked' );
	jQuery( '#digi-danger-preset .save-all' ).removeClass( 'disable' ).addClass( 'green' );
};

window.eoxiaJS.digirisk.setting.savedRiskSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
	// window.eoxiaJS.digirisk.setting.savePresetRisks( undefined );
};

window.eoxiaJS.digirisk.sheet_groupment = {};

window.eoxiaJS.digirisk.sheet_groupment.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_fiche_de_groupement".
 * Cliques sur le bouton "Fiche de groupement" pour recharger la vue.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.sheet_groupment.generatedSheetGroupment = function( triggeredElement, response ) {
	jQuery( '.tab-element[data-action="digi-fiche-de-groupement"]' ).click();
};

/**
 * Initialise l'objet "sheet_workunit" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 * Gères le callback en cas de réussite de la génération d'une fiche de poste.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.sheet_workunit = {};

window.eoxiaJS.digirisk.sheet_workunit.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_fiche_de_poste".
 * Clic sur le bouton "Fiche de poste" pour recharger la vue.
 *
 * @param  {HTMLAnchorElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.sheet_workunit.generatedFicheDePosteSuccess = function() {
	jQuery( '.tab-element[data-action="digi-fiche-de-poste"]' ).click();
};

jQuery( document ).ready(function() {
	jQuery(document).unbind('keydown').bind('keydown', function (event) {
    var doPrevent = false;
    if (event.keyCode === 8) {
        var d = event.srcElement || event.target;
        if ((d.tagName.toUpperCase() === 'INPUT' &&
             (
                 d.type.toUpperCase() === 'TEXT' ||
                 d.type.toUpperCase() === 'PASSWORD' ||
                 d.type.toUpperCase() === 'FILE' ||
                 d.type.toUpperCase() === 'SEARCH' ||
                 d.type.toUpperCase() === 'EMAIL' ||
                 d.type.toUpperCase() === 'NUMBER' ||
                 d.type.toUpperCase() === 'DATE' )
             ) ||
             ( d.tagName.toUpperCase() === 'TEXTAREA' ) ||
						 d.getAttribute( 'contenteditable' ) ) {
            doPrevent = d.readOnly || d.disabled;
        }
        else {
            doPrevent = true;
        }
    }

    if (doPrevent) {
        event.preventDefault();
    }
});
});

/**
 * Initialise l'objet "societyAdvancedOptions" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.societyAdvancedOptions = {};

window.eoxiaJS.digirisk.societyAdvancedOptions.init = function() {};

/**
 * Callback en cas de réussite de la requête Ajax "advanced_options_move_to"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response            Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.societyAdvancedOptions.savedAdvancedOptionsMoveTo = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.view );
};

window.eoxiaJS.digirisk.society = {};

window.eoxiaJS.digirisk.society.init = function() {
	window.eoxiaJS.digirisk.society.event();
};

window.eoxiaJS.digirisk.society.event = function() {
	jQuery( document ).on( 'keyup', 'input[name="title"]', window.eoxiaJS.digirisk.society.keyUpSaveIdentity );
};

/**
 * Callback en cas de réussite de la requête Ajax "load_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLSpanElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response             Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.society.loadedSocietySuccess = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
};

/**
 * Lorsque qu'on lache une touche dans le champ de texte "title", on fait apparaitre le bouton "Enregistrer".
 * Si la touche laché est "entrée" on appuie sur le bouton "Enregistrer".
 *
 * @param  {KeyboardEvent} event L'état du clavier lors du "keyup"
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.society.keyUpSaveIdentity = function( event ) {
	jQuery( '.digirisk-wrap .main-container .main-header .unit-header .action-input.save' ).addClass( 'active' );

	if ( 13 === event.keyCode ) {
		jQuery( '.digirisk-wrap .main-container .main-header .unit-header .action-input.save' ).click();
	}
};

/**
 * Callback en cas de réussite de la requête Ajax "save_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response            Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.society.savedSocietySuccess = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
};

/**
 * Callback en cas de réussite de la requête Ajax "delete_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLLiElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.society.deletedSocietySuccess = function( triggeredElement, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
};

/**
 * Callback en cas de réussite de la requête Ajax "save_groupment_configuration".
 * Remplaces les titres dans la navigation et le header du contenu principale.
 *
 * @param  {HTMLLiElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.society.savedSocietyConfiguration = function( triggeredElement, response ) {
	if ( 'digi-group' === response.data.society.type ) {
		jQuery( '.digirisk-wrap .workunit-navigation .title' ).text( response.data.society.unique_identifier + ' - ' + response.data.society.title );
	} else {
		jQuery( '.digirisk-wrap .workunit-list span[data-workunit-id="' + response.data.society.id + '"] span' ).text( response.data.society.title );
		jQuery( '.digirisk-wrap .workunit-list span[data-workunit-id="' + response.data.society.id + '"] span' ).attr( 'title', response.data.society.title );
	}

	jQuery( '.digirisk-wrap .main-content h1' ).text( 'Configuration de ' + response.data.society.unique_identifier + ' - ' + response.data.society.title );
	jQuery( '.digirisk-wrap .main-container .main-header input[name="title"]' ).val( response.data.society.title );
};

window.eoxiaJS.digirisk.tools = {};

window.eoxiaJS.digirisk.tools.init = function() {
	window.eoxiaJS.digirisk.tools.event();
};

window.eoxiaJS.digirisk.tools.event = function() {
	jQuery( document ).on( 'click', '.digi-tools-main-container .nav-tab', window.eoxiaJS.digirisk.tools.tab_switcher );
	jQuery( document ).on( 'click', '.reset-method-evaluation', window.eoxiaJS.digirisk.tools.reset_evaluation_method );
	jQuery( document ).on( 'click', '.element-risk-compilation', window.eoxiaJS.digirisk.tools.risk_fixer );
	jQuery( document ).on( 'click', '.fix-recommendation', window.eoxiaJS.digirisk.tools.recommendation_fixer );
	jQuery( document ).on( 'click', '.fix-doc', window.eoxiaJS.digirisk.tools.doc_fixer );
};

window.eoxiaJS.digirisk.tools.tab_switcher = function( event ) {
  event.preventDefault();

  /**	Remove all calss active on all tabs	*/
  jQuery( this ).closest( "h2" ).children( ".nav-tab" ).each( function(){
	  jQuery( this ).removeClass( "nav-tab-active" );
  });
  /**	Add the active class on clicked tab	*/
  jQuery( this ).addClass( "nav-tab-active" );

  /**	Hide the different container and display the selected container	*/
  jQuery( this ).closest( ".digi-tools-main-container" ).find( ".tab-content" ).each( function(){
	  jQuery( this ).hide();
  });

  jQuery( "#" + jQuery( this ).attr( "data-id" ) ).show();
},

window.eoxiaJS.digirisk.tools.reset_evaluation_method = function( event ) {
  event.preventDefault();

  if ( window.confirm( window.digi_tools_confirm ) ) {
    jQuery( this ).addClass( "wp-digi-loading" );
    jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

    var li = document.createElement( 'li' );
    li.innerHTML = window.digi_tools_in_progress;
    jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

    var data = {
      action: 'reset_method_evaluation',
      _wpnonce: jQuery( this ).data( 'nonce' )
    };

		window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
  }
},

window.eoxiaJS.digirisk.tools.risk_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'compil_risk_list',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.recommendation_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'transfert_recommendation',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.doc_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'transfert_doc',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.exec_request = function( li, data, element ) {
	jQuery.post( window.ajaxurl, data, function() {
		jQuery( element ).removeClass( "wp-digi-loading" );
		li.innerHTML += ' ' + window.digi_tools_done;
	} );
}

jQuery( document ).ready( function(){
	/**
	 * Transform default form into an ajax form for datas transfer treatment
	 */
	jQuery( "#wpdigi-datastransfer-form" ).ajaxForm({
		dataType: "json",
		beforeSubmit: function( formData, jqForm, options ) {
			/**	Adding loading class to form button	*/
			jqForm.children( "button.wp-digi-bton" ).addClass( "wp-digi-loading" );
		},
		success: function( responseText, statusText, xhr, $form ) {
			$form.children( "button.wp-digi-bton" ).removeClass( "wp-digi-loading" );
			if ( !responseText[ 'status' ] && responseText[ 'reload_transfert' ] ) {
				if ( 'element' == responseText[ 'sub_action' ] ) {
					jQuery( ".wpdigi-transfered-element-nb-" + responseText[ 'element_type' ] ).html( responseText[ 'main_element_nb' ] );
					if ( responseText[ 'main_element_nb' ] == jQuery( ".wpdigi-to-transfer-element-nb-" + responseText[ 'element_type' ] ).html() ) {
						jQuery( ".wp-digi-datastransfer-element-type-name-" + responseText[ 'element_type' ] ).addClass( 'dashicons-before dashicons-yes' );
					}
					jQuery( ".wpdigi-transfered-element-nb-" + responseText[ 'sub_element_type' ] ).html( responseText[ 'sub_element_nb' ] );
					if ( responseText[ 'sub_element_nb' ] == jQuery( ".wpdigi-to-transfer-element-nb-" + responseText[ 'sub_element_type' ] ).html() ) {
						jQuery( ".wp-digi-datastransfer-element-type-name-" + responseText[ 'sub_element_type' ] ).addClass( 'dashicons-before dashicons-yes' );
					}
					if ( undefined != ( responseText['treated_tree'] ) ) {
						jQuery( ".wpdigi-tree-check-" + responseText[ 'element_type' ] ).html( responseText['treated_tree'] );
					}
				} else {
					jQuery( ".wpdigi-transfered-element-nb-documents" ).html( responseText[ 'transfered' ] );
					jQuery( ".wpdigi-not-transfered-element-nb-documents" ).html( responseText[ 'not_transfered' ] );
					if ( ( responseText[ 'transfered' ] + responseText[ 'not_transfered' ] ) == jQuery( ".wpdigi-to-transfer-element-nb-wpdigi-to-transfer-element-nb-documents" ).html() ) {
						jQuery( "wp-digi-datastransfer-element-type-name-documents" ).addClass( 'dashicons-before dashicons-yes' );
					}
				}
				if ( 'config_components' == responseText[ 'old_sub_action' ] ) {
					jQuery( ".wp-digi-transfert-components" ).html( responseText[ 'display_components_transfer' ] );
					$form.children( "input[name=action]" ).val( $form.children( "input[name=action]" ).val().replace( '-config_components', '' ) );
				}
				$form.children( "input[name=element_type_to_transfert]" ).val( responseText[ 'element_type' ] );
				$form.children( "input[name=sub_action]" ).val( responseText[ 'sub_action' ] );
				$form.submit();
			}
			else if ( responseText[ 'status' ] ) {
				jQuery( '#wp-digi-transfert-message' ).html( responseText[ "message" ] ).show();
				jQuery( "#wpdigi-datastransfer-form .wp-digi-bton-first" ).hide();
				setTimeout( function(){
				 window.location.href = responseText['redirect_to_url'];
				}, '1500' );
			}
		}
	});

	jQuery( "input[name=wpdigi-dtrans-userid-behaviour]" ).click( function(){
		if ( jQuery( this ).is( ":checked" ) ) {
			jQuery( ".wp-digi-dtrans-userid-options-container" ).html( "" ).hide();
		}
		else {
			var data = {
				"action": "wpdigi-dtrans-transfert-options-load",
				"element_type": jQuery( this ).closest( "form" ).children( "input[name=element_type_to_transfert]" ).val(),
			};
			jQuery( ".wp-digi-dtrans-userid-options-container" ).load( ajaxurl, data ).show();
		}
	});
});

/**
 *	Get the number of element created during transfer in order to inform user
 */
function get_treated_element( element ) {
	var data = {
		action: "wpdigi-dtrans-get-done-element",
		element: element,
	};
	jQuery.post( ajaxurl, data, function( response ) {
		var i;
		for (i = 0; i < response['transfert'].length; i++) {
			jQuery( "#digi-datas-transfert-progression-container-" + response['transfert'][ i ][ 'type' ] ).html( response['transfert'][ i ][ 'text' ]);
		}

		if ( response[ "auto_reload" ] ) {
			setTimeout( function(){
				get_treated_element( element );
			}, "500");
		}
	}, "json");
}

/**
 * Initialise l'objet "updateManager" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.2.8.0
 * @version 6.2.8.0
 */

window.eoxiaJS.digirisk.updateManager = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 6.2.8.0
 * @version 6.2.8.0
 */
window.eoxiaJS.digirisk.updateManager.init = function() {
	window.eoxiaJS.digirisk.updateManager.requestUpdate();
};

window.eoxiaJS.digirisk.updateManager.requestUpdate = function( args ) {
	var versionToUpdate = jQuery( 'input[name="version_available[]"]:first' ).val();
	var action = jQuery( 'input[name="version[' + versionToUpdate + '][action][]"]:first' ).val();
	var description = jQuery( 'input[name="version[' + versionToUpdate + '][description][]"]:first' ).val();

	var data = {
		action: action,
		versionToUpdate: versionToUpdate,
		args: args
	};

	if ( action ) {

		if ( args && args.moreDescription ) {
			description += args.moreDescription;
		}

		jQuery( '.log' ).append( '<li>' + description + window.digi_loader + '</li>' );

		jQuery.post( ajaxurl, data, function( response ) {
			jQuery( '.log img' ).remove();

			if ( response.data.done ) {
				jQuery( '.log' ).append( '<li>Terminé</li>' );

				jQuery( 'input[name="version[' + versionToUpdate + '][action][]"]:first' ).remove();
				jQuery( 'input[name="version[' + versionToUpdate + '][description][]"]:first' ).remove();

				if ( 0 == jQuery( 'input[name="version[' + versionToUpdate + '][action][]"]:first' ).length ) {
					jQuery( 'input[name="version_available[]"]:first' ).remove();
				}
				if ( 0 == jQuery( 'input[name="version_available[]"]:first' ).length ) {
					jQuery( '.log' ).append( '<li>Redirection vers l\'application en cours...</li>' );
					jQuery.post( ajaxurl, { 'action': 'digi_redirect_to_dashboard' }, function( response ) {
						window.location = response;
					});
				} else {
					window.eoxiaJS.digirisk.updateManager.requestUpdate( response.data.args );
				}
			} else {
				window.eoxiaJS.digirisk.updateManager.requestUpdate( response.data.args );
			}
		} );
	}
};

"use strict";

var digi_user_import = {
	$: undefined,

	init: function( event, $ ) {
		digi_user_import.$ = $;
		if ( event || event === undefined ) {
			digi_user_import.event();
		}
	},

	event: function() {
		digi_user_import.$( document ).on( 'submit', '#digi-data-import-user #digi-export-form', function( event ) { digi_user_import.create_export( event, digi_user_import.$( this ) ); } );
		digi_user_import.$( document ).on( 'change', '#digi-data-import-user #digi-import-form input[type="file"]', function( event ) { digi_user_import.make_import( event, digi_user_import.$( this ) ); } );
	},

	create_export: function( event, element ) {
		event.preventDefault();
		digi_user_import.$( element ).closest( 'form' ).ajaxSubmit( {
			'beforeSubmit': function() {
				digi_user_import.$( element ).closest( '.wp-digi-bloc-loader' ).addClass( "wp-digi-bloc-loading" );
			},
			success: function( response ) {
				digi_user_import.$( element ).closest( '.wp-digi-bloc-loader' ).removeClass( "wp-digi-bloc-loading" );
				window.digi_global.download_file( response.data.url_to_file, response.data.filename );
			}
		} );
	},

	make_import: function( event, element ) {
		event.preventDefault();

		var data = new FormData();
		data.append( 'file', digi_user_import.$( element )[0].files[0] );
		data.append( 'action', 'digi_import_user' );
		data.append( '_wpnonce', digi_user_import.$( element ).closest('form').find( 'input[name="_wpnonce"]' ).val() );
		data.append( 'index_element', 0 );

		digi_user_import.request_import( data );
	},

	request_import: function( data ) {
		digi_user_import.$.ajax( {
			url: ajaxurl,
			data: data,
			processData: false,
			contentType: false,
			type: 'POST',
			beforeSend: function() {
				digi_user_import.$('.digi-import-detail').html( window.digi_tools_in_progress );
			},
			success: function(response) {
				if ( response.success ) {
					if ( !response.data.end ) {
						var data = new FormData();
						data.append( 'action', 'digi_import_user' );
						data.append( '_wpnonce', digi_user_import.$( '#digi-data-import-user #digi-import-form' ).find( 'input[name="_wpnonce"]' ).val() );
						data.append( 'index_element', response.data.index_element );
						data.append( 'count_element', response.data.count_element );
						data.append( 'path_to_csv', response.data.path_to_csv );
						digi_user_import.$('.digi-import-detail').html( window.digi_tools_in_progress );
						digi_user_import.request_import(data);
					}
					else {
						digi_user_import.$('.digi-import-detail').html( window.digi_tools_done );
					}

					digi_user_import.$('progress').attr( 'max', response.data.count_element );
					digi_user_import.$('progress').val( ( response.data.index_element / response.data.count_element ) * response.data.count_element );

				}
				else {
					alert( 'Problème lors de l\'importation du modèle' );
					digi_installer.$( '#digi-data-export' ).removeClass( "wp-digi-bloc-loading" );
				}
			}
		} );
	}
};

jQuery( document ).ready(function( $ ) {
	digi_user_import.init( true, $ );
});

window.eoxiaJS.digirisk.user = {};

window.eoxiaJS.digirisk.user.init = function() {
	window.eoxiaJS.digirisk.user.event();
};

/**
 * Initialise l'évènement relatif à la pagination.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.user.event = function() {
	jQuery( document ).on( 'click', '.form-edit-user-assign .wp-digi-pagination a', window.eoxiaJS.digirisk.user.pagination );
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_user_assign".
 * Appel la méthode render de l'objet user avec la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.user.editUserAssignSuccess = function( triggeredElement, response ) {
	window.eoxiaJS.digirisk.user.render( response );
};

/**
 * Le callback en cas de réussite à la requête Ajax "detach_user".
 * Appel la méthode render de l'objet user avec la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.user.detachUserSuccess = function( triggeredElement, response ) {
	window.eoxiaJS.digirisk.user.render( response );
};

/**
 * Remplaces le contenu de la section ".users" avec la réponse de la requête Ajax de editUserAssignSuccess et detachUserSuccess.
 *
 * @param  {Object} response Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.user.render = function( response ) {
	jQuery( 'section.users' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.render.call_render_changed();
};

window.eoxiaJS.digirisk.user.pagination = function( event ) {
	event.preventDefault();

	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var next_page = href[1].replace('current_page=', '');
	var element_id = href[2].replace('element_id=', '');

	var data = {
		action: 'paginate_user',
		element_id: element_id,
		next_page: next_page
	};

	jQuery( '.form-edit-user-assign' ).addClass( 'loading' );

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.form-edit-user-assign' ).replaceWith( view );
	} );
};

/**
 * Initialise l'objet "userDashboard" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.5.0
 */

window.eoxiaJS.digirisk.userDashboard = {};

window.eoxiaJS.digirisk.userDashboard.init = function() {
	window.eoxiaJS.digirisk.userDashboard.event();
};

window.eoxiaJS.digirisk.userDashboard.event = function() {
	jQuery( document ).on( 'keyup', '.user-dashboard .input-domain-mail', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.lastname', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.firstname', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.email', window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm );

	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.lastname', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.firstname', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.email', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );

	jQuery( document ).on( 'click', '.user-dashboard .wp-digi-action-save-domain-mail', window.eoxiaJS.digirisk.userDashboard.save_domain_mail );
};

/**
 * Vérifie si le domaine de l'email a un format valide.
 *
 * @param  {HTMLDivElement} triggeredElement
 * @return {void}
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.checkDomainEmailValid = function( triggeredElement ) {
	if ( ! window.regex.validateEndEmail( triggeredElement.closest( '.email-domain' ).find( 'input[type="text"]' ).val() ) ) {
		triggeredElement.closest( '.email-domain' ).find( 'label' ).addClass( 'active' );
		return false;
	} else {
		triggeredElement.closest( '.email-domain' ).find( 'label' ).removeClass( 'active' );
		return true;
	}
};

/**
 * Envoies une requête pour enregister le domaine de l'email.
 *
 * @param  {ClickEvent} event L'état de la souris lors du clic sur le bouton.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.save_domain_mail = function( event ) {
	var element = jQuery( this );
	var data = {};

	event.preventDefault();

	data = {
		action: 'save_domain_mail',
		_wpnonce: element.data( 'nonce' ),
		domain_mail: element.closest( '.form-element' ).find( 'input' ).val()
	};

	jQuery.post( window.ajaxurl, data );
};

/**
 * Lors qu'une touche est en status "keyup" on met à jour le champ de texte "email" avec les données du champs de texte "nom", "prénom" et "Domaine de l'email".
 *
 * @param  {KeyEvent} event L'état du clavier lors de l'évènement "keyup"
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail = function( event ) {
	var email = jQuery( '.user-dashboard table.users tr:last .email' ).val();
	var firstname = jQuery( '.user-dashboard table.users tr:last .firstname' ).val();
	var lastname = jQuery( '.user-dashboard table.users tr:last .lastname' ).val();
	var domainMail = jQuery( '.input-domain-mail' ).val();
	var together = window.eoxiaJS.global.removeDiacritics( firstname + '.' + lastname + '@' + domainMail ).toLowerCase();

	jQuery( '.user-dashboard table.users tr:last input[name="email"]' ).val( together );

	// Vérifie que l'évènement n'est pas déclenché dans le champ de texte du domaine de l'email.
	if ( 'input-domain-mail' !== event.target.className ) {
		window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm( event, jQuery( this ) );
	}
};

/**
 * Si la touche "entrée" est appuyé, appuies sur le bouton "plus" pour ajouter un utilisateur.
 *
 * @param  {KeyEvent} event L'état du clavier lors de l'évènement "keyup"
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.user-dashboard table.users tr:last .action-input' ).click();
	}
};

/**
 * Si la ligne a un contenu, change la couleur du bouton.
 *
 * @param  {KeyboardEvent} event L'état du clavier.
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit = function( event ) {
	jQuery( this ).closest( 'tr' ).find( '.action .button.disable' ).removeClass( 'disable' ).addClass( 'blue' );
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_user".
 * Supprimes la ligne de l'utilisateur.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.deletedUserSuccess = function( element, response ) {
	element.closest( 'tr' ).fadeOut();
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_user".
 * Remplaces la vue de la ligne.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.loadedUserSuccess = function( element, response ) {
  element.closest( 'tr' ).replaceWith( response.data.template );
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_user".
 * Remplaces le contenu du tableau "users" par le template renvoyé par la requête Ajax.
 *
 * Si response.data.error est égale à true, affiches le tooltip disant "Cette adresse email est déjà utilisée."
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.userDashboard.savedUserSuccess = function( element, response ) {
	jQuery( '.user-dashboard table.users .tooltip.red.active' ).removeClass( 'active' );

	if ( response.data.error ) {
		jQuery( '.user-dashboard table.users .tooltip.red' ).addClass( 'active' );
	} else {
		jQuery( '.user-dashboard table.users' ).html( response.data.template );
		jQuery( '.user-dashboard table.users tr:last input.lastname' ).focus();
	}
};

"use strict";

var digi_user_detail = {
	$: undefined,
	event: function($) {
		digi_user_detail.$ = $;
    digi_user_detail.$( document ).on( 'click', '#wp-digi-form-add-staff .wp-digi-action-view-detail', function( event ) { digi_user_detail.load_staff_detail( event, digi_user_detail.$( this ) ); } );
		digi_user_detail.$( document ).on( 'click', '.user-detail .load-data', function (event ) { digi_user_detail.load_data( event, digi_user_detail.$( this ) ); } );
  },

	load_staff_detail: function( event, element ) {
		event.preventDefault();

		var user_id = digi_user_detail.$( element ).data( 'id' );
		var _wpnonce = digi_user_detail.$( element ).data( 'nonce' );

		var data = {
			action: 'load_user_detail',
			_wpnonce: _wpnonce,
			user_id: user_id
		};

		digi_user_detail.$( '.user-detail' ).addClass( 'wp-digi-bloc-loading' );

		digi_user_detail.$.post( window.ajaxurl, data, function( response ) {
			digi_user_detail.$( '.user-detail' ).replaceWith( response.data.template );
		});
	},

	load_data: function( event, element ) {
		var user_id = digi_user_detail.$( element ).closest( 'ul' ).data( 'user-id' );
		var _wpnonce = digi_user_detail.$( element ).closest( 'ul' ).data( 'nonce' );
		var data_name = digi_user_detail.$ (element ).data( 'name' );

		var data = {
			action: 'load_data',
			_wpnonce: _wpnonce,
			user_id: user_id,
			data_name: data_name
		};

		digi_user_detail.$( '.user-detail .wp-digi-list' ).addClass( 'wp-digi-bloc-loading' );

		digi_user_detail.$.post( window.ajaxurl, data, function( response ) {
			digi_user_detail.$( '.user-detail .wp-digi-list' ).replaceWith( response.data.template );
		});
	}
};

window.eoxiaJS.digirisk.workunit = {};

window.eoxiaJS.digirisk.workunit.init = function() {
	window.eoxiaJS.digirisk.workunit.event();
};

/**
 * Initialise deux évènements:
 * -Lorque qu'une touche du clavier est remontée dans le champ de texte pour ajouter une nouvelle unité de travail.
 * -Lorsque qu'un clic est effectué sur unité de travail dans le menu de navigation.
 *
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.event = function() {
	jQuery( document ).on( 'keyup', '.digirisk-wrap .workunit-add input[type="text"]', window.eoxiaJS.digirisk.workunit.keyEnterSendForm );
	jQuery( document ).on( 'click', '.digirisk-wrap .workunit-list span[data-action="load_society"]', window.eoxiaJS.digirisk.workunit.setActive );
};

/**
 * Cette méthode clic sur le bouton "add" lorsque la touche "entrée" est remontée afin d'ajouter une unité de travail.
 *
 * @param  {KeyboardEvent} event Contient toutes les valeurs du clavier lorsqu'une touche remonte.
 * @return void
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.keyEnterSendForm = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.digirisk-wrap .workunit-add .add' ).click();
	}
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_workunit".
 * Remplace le template de l'application en entier et clique sur la nouvelle unité de travail pour la charger.
 *
 * @param  {HTMLDivElement} triggeredElement L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response         Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.saved_workunit_success = function( triggeredElement, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
	jQuery( '.workunit-list .unit-header[data-workunit-id="' + response.data.id + '"] span[data-action="load_society"]' ).click();
};

/**
 * Ajoutes la classe "active" à l'unité de travail cliquée.
 *
 * @param {ClickEvent} event Contient toutes les valeurs de la souris lors du clic sur l'élément.
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.setActive = function( event ) {
	jQuery( '.digirisk-wrap .workunit-list li.active' ).removeClass( 'active' );
	jQuery( this ).closest( 'li' ).addClass( 'active' );
};

window.eoxiaJS.digirisk.ZIP = {};

window.eoxiaJS.digirisk.ZIP.init = function() {
	window.eoxiaJS.digirisk.ZIP.event();
};

window.eoxiaJS.digirisk.ZIP.event = function() {
};

/*!
 * Chart.js
 * http://chartjs.org/
 * Version: 1.0.2
 *
 * Copyright 2015 Nick Downie
 * Released under the MIT license
 * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md
 */
(function(){"use strict";var t=this,i=t.Chart,e=function(t){this.canvas=t.canvas,this.ctx=t;var i=function(t,i){return t["offset"+i]?t["offset"+i]:document.defaultView.getComputedStyle(t).getPropertyValue(i)},e=this.width=i(t.canvas,"Width")||t.canvas.width,n=this.height=i(t.canvas,"Height")||t.canvas.height;return e=this.width=t.canvas.width,n=this.height=t.canvas.height,this.aspectRatio=this.width/this.height,s.retinaScale(this),this};e.defaults={global:{animation:!0,animationSteps:60,animationEasing:"easeOutQuart",showScale:!0,scaleOverride:!1,scaleSteps:null,scaleStepWidth:null,scaleStartValue:null,scaleLineColor:"rgba(0,0,0,.1)",scaleLineWidth:1,scaleShowLabels:!0,scaleLabel:"<%=value%>",scaleIntegersOnly:!0,scaleBeginAtZero:!1,scaleFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",scaleFontSize:12,scaleFontStyle:"normal",scaleFontColor:"#666",responsive:!1,maintainAspectRatio:!0,showTooltips:!0,customTooltips:!1,tooltipEvents:["mousemove","touchstart","touchmove","mouseout"],tooltipFillColor:"rgba(0,0,0,0.8)",tooltipFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",tooltipFontSize:14,tooltipFontStyle:"normal",tooltipFontColor:"#fff",tooltipTitleFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",tooltipTitleFontSize:14,tooltipTitleFontStyle:"bold",tooltipTitleFontColor:"#fff",tooltipTitleTemplate:"<%= label%>",tooltipYPadding:6,tooltipXPadding:6,tooltipCaretSize:8,tooltipCornerRadius:6,tooltipXOffset:10,tooltipTemplate:"<%if (label){%><%=label%>: <%}%><%= value %>",multiTooltipTemplate:"<%= value %>",multiTooltipKeyBackground:"#fff",segmentColorDefault:["#A6CEE3","#1F78B4","#B2DF8A","#33A02C","#FB9A99","#E31A1C","#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#B4B482","#B15928"],segmentHighlightColorDefaults:["#CEF6FF","#47A0DC","#DAFFB2","#5BC854","#FFC2C1","#FF4244","#FFE797","#FFA728","#F2DAFE","#9265C2","#DCDCAA","#D98150"],onAnimationProgress:function(){},onAnimationComplete:function(){}}},e.types={};var s=e.helpers={},n=s.each=function(t,i,e){var s=Array.prototype.slice.call(arguments,3);if(t)if(t.length===+t.length){var n;for(n=0;n<t.length;n++)i.apply(e,[t[n],n].concat(s))}else for(var o in t)i.apply(e,[t[o],o].concat(s))},o=s.clone=function(t){var i={};return n(t,function(e,s){t.hasOwnProperty(s)&&(i[s]=e)}),i},a=s.extend=function(t){return n(Array.prototype.slice.call(arguments,1),function(i){n(i,function(e,s){i.hasOwnProperty(s)&&(t[s]=e)})}),t},h=s.merge=function(t,i){var e=Array.prototype.slice.call(arguments,0);return e.unshift({}),a.apply(null,e)},l=s.indexOf=function(t,i){if(Array.prototype.indexOf)return t.indexOf(i);for(var e=0;e<t.length;e++)if(t[e]===i)return e;return-1},r=(s.where=function(t,i){var e=[];return s.each(t,function(t){i(t)&&e.push(t)}),e},s.findNextWhere=function(t,i,e){e||(e=-1);for(var s=e+1;s<t.length;s++){var n=t[s];if(i(n))return n}},s.findPreviousWhere=function(t,i,e){e||(e=t.length);for(var s=e-1;s>=0;s--){var n=t[s];if(i(n))return n}},s.inherits=function(t){var i=this,e=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return i.apply(this,arguments)},s=function(){this.constructor=e};return s.prototype=i.prototype,e.prototype=new s,e.extend=r,t&&a(e.prototype,t),e.__super__=i.prototype,e}),c=s.noop=function(){},u=s.uid=function(){var t=0;return function(){return"chart-"+t++}}(),d=s.warn=function(t){window.console&&"function"==typeof window.console.warn&&console.warn(t)},p=s.amd="function"==typeof define&&define.amd,f=s.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},g=s.max=function(t){return Math.max.apply(Math,t)},m=s.min=function(t){return Math.min.apply(Math,t)},v=(s.cap=function(t,i,e){if(f(i)){if(t>i)return i}else if(f(e)&&e>t)return e;return t},s.getDecimalPlaces=function(t){if(t%1!==0&&f(t)){var i=t.toString();if(i.indexOf("e-")<0)return i.split(".")[1].length;if(i.indexOf(".")<0)return parseInt(i.split("e-")[1]);var e=i.split(".")[1].split("e-");return e[0].length+parseInt(e[1])}return 0}),S=s.radians=function(t){return t*(Math.PI/180)},x=(s.getAngleFromPoint=function(t,i){var e=i.x-t.x,s=i.y-t.y,n=Math.sqrt(e*e+s*s),o=2*Math.PI+Math.atan2(s,e);return 0>e&&0>s&&(o+=2*Math.PI),{angle:o,distance:n}},s.aliasPixel=function(t){return t%2===0?0:.5}),y=(s.splineCurve=function(t,i,e,s){var n=Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2)),o=Math.sqrt(Math.pow(e.x-i.x,2)+Math.pow(e.y-i.y,2)),a=s*n/(n+o),h=s*o/(n+o);return{inner:{x:i.x-a*(e.x-t.x),y:i.y-a*(e.y-t.y)},outer:{x:i.x+h*(e.x-t.x),y:i.y+h*(e.y-t.y)}}},s.calculateOrderOfMagnitude=function(t){return Math.floor(Math.log(t)/Math.LN10)}),C=(s.calculateScaleRange=function(t,i,e,s,o){var a=2,h=Math.floor(i/(1.5*e)),l=a>=h,r=[];n(t,function(t){null==t||r.push(t)});var c=m(r),u=g(r);u===c&&(u+=.5,c>=.5&&!s?c-=.5:u+=.5);for(var d=Math.abs(u-c),p=y(d),f=Math.ceil(u/(1*Math.pow(10,p)))*Math.pow(10,p),v=s?0:Math.floor(c/(1*Math.pow(10,p)))*Math.pow(10,p),S=f-v,x=Math.pow(10,p),C=Math.round(S/x);(C>h||h>2*C)&&!l;)if(C>h)x*=2,C=Math.round(S/x),C%1!==0&&(l=!0);else if(o&&p>=0){if(x/2%1!==0)break;x/=2,C=Math.round(S/x)}else x/=2,C=Math.round(S/x);return l&&(C=a,x=S/C),{steps:C,stepValue:x,min:v,max:v+C*x}},s.template=function(t,i){function e(t,i){var e=/\W/.test(t)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+t.replace(/[\r\t\n]/g," ").split("<%").join("	").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("	").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):s[t]=s[t];return i?e(i):e}if(t instanceof Function)return t(i);var s={};return e(t,i)}),b=(s.generateLabels=function(t,i,e,s){var o=new Array(i);return t&&n(o,function(i,n){o[n]=C(t,{value:e+s*(n+1)})}),o},s.easingEffects={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-1*t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-0.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return 1*((t=t/1-1)*t*t+1)},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-1*((t=t/1-1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-0.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return 1*(t/=1)*t*t*t*t},easeOutQuint:function(t){return 1*((t=t/1-1)*t*t*t*t+1)},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return-1*Math.cos(t/1*(Math.PI/2))+1},easeOutSine:function(t){return 1*Math.sin(t/1*(Math.PI/2))},easeInOutSine:function(t){return-0.5*(Math.cos(Math.PI*t/1)-1)},easeInExpo:function(t){return 0===t?1:1*Math.pow(2,10*(t/1-1))},easeOutExpo:function(t){return 1===t?1:1*(-Math.pow(2,-10*t/1)+1)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(-Math.pow(2,-10*--t)+2)},easeInCirc:function(t){return t>=1?t:-1*(Math.sqrt(1-(t/=1)*t)-1)},easeOutCirc:function(t){return 1*Math.sqrt(1-(t=t/1-1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-0.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var i=1.70158,e=0,s=1;return 0===t?0:1==(t/=1)?1:(e||(e=.3),s<Math.abs(1)?(s=1,i=e/4):i=e/(2*Math.PI)*Math.asin(1/s),-(s*Math.pow(2,10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/e)))},easeOutElastic:function(t){var i=1.70158,e=0,s=1;return 0===t?0:1==(t/=1)?1:(e||(e=.3),s<Math.abs(1)?(s=1,i=e/4):i=e/(2*Math.PI)*Math.asin(1/s),s*Math.pow(2,-10*t)*Math.sin((1*t-i)*(2*Math.PI)/e)+1)},easeInOutElastic:function(t){var i=1.70158,e=0,s=1;return 0===t?0:2==(t/=.5)?1:(e||(e=1*(.3*1.5)),s<Math.abs(1)?(s=1,i=e/4):i=e/(2*Math.PI)*Math.asin(1/s),1>t?-.5*(s*Math.pow(2,10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/e)):s*Math.pow(2,-10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/e)*.5+1)},easeInBack:function(t){var i=1.70158;return 1*(t/=1)*t*((i+1)*t-i)},easeOutBack:function(t){var i=1.70158;return 1*((t=t/1-1)*t*((i+1)*t+i)+1)},easeInOutBack:function(t){var i=1.70158;return(t/=.5)<1?.5*(t*t*(((i*=1.525)+1)*t-i)):.5*((t-=2)*t*(((i*=1.525)+1)*t+i)+2)},easeInBounce:function(t){return 1-b.easeOutBounce(1-t)},easeOutBounce:function(t){return(t/=1)<1/2.75?1*(7.5625*t*t):2/2.75>t?1*(7.5625*(t-=1.5/2.75)*t+.75):2.5/2.75>t?1*(7.5625*(t-=2.25/2.75)*t+.9375):1*(7.5625*(t-=2.625/2.75)*t+.984375)},easeInOutBounce:function(t){return.5>t?.5*b.easeInBounce(2*t):.5*b.easeOutBounce(2*t-1)+.5}}),w=s.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),P=(s.cancelAnimFrame=function(){return window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame||function(t){return window.clearTimeout(t,1e3/60)}}(),s.animationLoop=function(t,i,e,s,n,o){var a=0,h=b[e]||b.linear,l=function(){a++;var e=a/i,r=h(e);t.call(o,r,e,a),s.call(o,r,e),i>a?o.animationFrame=w(l):n.apply(o)};w(l)},s.getRelativePosition=function(t){var i,e,s=t.originalEvent||t,n=t.currentTarget||t.srcElement,o=n.getBoundingClientRect();return s.touches?(i=s.touches[0].clientX-o.left,e=s.touches[0].clientY-o.top):(i=s.clientX-o.left,e=s.clientY-o.top),{x:i,y:e}},s.addEvent=function(t,i,e){t.addEventListener?t.addEventListener(i,e):t.attachEvent?t.attachEvent("on"+i,e):t["on"+i]=e}),L=s.removeEvent=function(t,i,e){t.removeEventListener?t.removeEventListener(i,e,!1):t.detachEvent?t.detachEvent("on"+i,e):t["on"+i]=c},k=(s.bindEvents=function(t,i,e){t.events||(t.events={}),n(i,function(i){t.events[i]=function(){e.apply(t,arguments)},P(t.chart.canvas,i,t.events[i])})},s.unbindEvents=function(t,i){n(i,function(i,e){L(t.chart.canvas,e,i)})}),F=s.getMaximumWidth=function(t){var i=t.parentNode,e=parseInt(R(i,"padding-left"))+parseInt(R(i,"padding-right"));return i.clientWidth-e},A=s.getMaximumHeight=function(t){var i=t.parentNode,e=parseInt(R(i,"padding-bottom"))+parseInt(R(i,"padding-top"));return i.clientHeight-e},R=s.getStyle=function(t,i){return t.currentStyle?t.currentStyle[i]:document.defaultView.getComputedStyle(t,null).getPropertyValue(i)},T=(s.getMaximumSize=s.getMaximumWidth,s.retinaScale=function(t){var i=t.ctx,e=t.canvas.width,s=t.canvas.height;window.devicePixelRatio&&(i.canvas.style.width=e+"px",i.canvas.style.height=s+"px",i.canvas.height=s*window.devicePixelRatio,i.canvas.width=e*window.devicePixelRatio,i.scale(window.devicePixelRatio,window.devicePixelRatio))}),M=s.clear=function(t){t.ctx.clearRect(0,0,t.width,t.height)},W=s.fontString=function(t,i,e){return i+" "+t+"px "+e},z=s.longestText=function(t,i,e){t.font=i;var s=0;return n(e,function(i){var e=t.measureText(i).width;s=e>s?e:s}),s},B=s.drawRoundedRectangle=function(t,i,e,s,n,o){t.beginPath(),t.moveTo(i+o,e),t.lineTo(i+s-o,e),t.quadraticCurveTo(i+s,e,i+s,e+o),t.lineTo(i+s,e+n-o),t.quadraticCurveTo(i+s,e+n,i+s-o,e+n),t.lineTo(i+o,e+n),t.quadraticCurveTo(i,e+n,i,e+n-o),t.lineTo(i,e+o),t.quadraticCurveTo(i,e,i+o,e),t.closePath()};e.instances={},e.Type=function(t,i,s){this.options=i,this.chart=s,this.id=u(),e.instances[this.id]=this,i.responsive&&this.resize(),this.initialize.call(this,t)},a(e.Type.prototype,{initialize:function(){return this},clear:function(){return M(this.chart),this},stop:function(){return e.animationService.cancelAnimation(this),this},resize:function(t){this.stop();var i=this.chart.canvas,e=F(this.chart.canvas),s=this.options.maintainAspectRatio?e/this.chart.aspectRatio:A(this.chart.canvas);return i.width=this.chart.width=e,i.height=this.chart.height=s,T(this.chart),"function"==typeof t&&t.apply(this,Array.prototype.slice.call(arguments,1)),this},reflow:c,render:function(t){if(t&&this.reflow(),this.options.animation&&!t){var i=new e.Animation;i.numSteps=this.options.animationSteps,i.easing=this.options.animationEasing,i.render=function(t,i){var e=s.easingEffects[i.easing],n=i.currentStep/i.numSteps,o=e(n);t.draw(o,n,i.currentStep)},i.onAnimationProgress=this.options.onAnimationProgress,i.onAnimationComplete=this.options.onAnimationComplete,e.animationService.addAnimation(this,i)}else this.draw(),this.options.onAnimationComplete.call(this);return this},generateLegend:function(){return C(this.options.legendTemplate,this)},destroy:function(){this.clear(),k(this,this.events);var t=this.chart.canvas;t.width=this.chart.width,t.height=this.chart.height,t.style.removeProperty?(t.style.removeProperty("width"),t.style.removeProperty("height")):(t.style.removeAttribute("width"),t.style.removeAttribute("height")),delete e.instances[this.id]},showTooltip:function(t,i){"undefined"==typeof this.activeElements&&(this.activeElements=[]);var o=function(t){var i=!1;return t.length!==this.activeElements.length?i=!0:(n(t,function(t,e){t!==this.activeElements[e]&&(i=!0)},this),i)}.call(this,t);if(o||i){if(this.activeElements=t,this.draw(),this.options.customTooltips&&this.options.customTooltips(!1),t.length>0)if(this.datasets&&this.datasets.length>1){for(var a,h,r=this.datasets.length-1;r>=0&&(a=this.datasets[r].points||this.datasets[r].bars||this.datasets[r].segments,h=l(a,t[0]),-1===h);r--);var c=[],u=[],d=function(t){var i,e,n,o,a,l=[],r=[],d=[];return s.each(this.datasets,function(t){i=t.points||t.bars||t.segments,i[h]&&i[h].hasValue()&&l.push(i[h])}),s.each(l,function(t){r.push(t.x),d.push(t.y),c.push(s.template(this.options.multiTooltipTemplate,t)),u.push({fill:t._saved.fillColor||t.fillColor,stroke:t._saved.strokeColor||t.strokeColor})},this),a=m(d),n=g(d),o=m(r),e=g(r),{x:o>this.chart.width/2?o:e,y:(a+n)/2}}.call(this,h);new e.MultiTooltip({x:d.x,y:d.y,xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,xOffset:this.options.tooltipXOffset,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,titleTextColor:this.options.tooltipTitleFontColor,titleFontFamily:this.options.tooltipTitleFontFamily,titleFontStyle:this.options.tooltipTitleFontStyle,titleFontSize:this.options.tooltipTitleFontSize,cornerRadius:this.options.tooltipCornerRadius,labels:c,legendColors:u,legendColorBackground:this.options.multiTooltipKeyBackground,title:C(this.options.tooltipTitleTemplate,t[0]),chart:this.chart,ctx:this.chart.ctx,custom:this.options.customTooltips}).draw()}else n(t,function(t){var i=t.tooltipPosition();new e.Tooltip({x:Math.round(i.x),y:Math.round(i.y),xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,caretHeight:this.options.tooltipCaretSize,cornerRadius:this.options.tooltipCornerRadius,text:C(this.options.tooltipTemplate,t),chart:this.chart,custom:this.options.customTooltips}).draw()},this);return this}},toBase64Image:function(){return this.chart.canvas.toDataURL.apply(this.chart.canvas,arguments)}}),e.Type.extend=function(t){var i=this,s=function(){return i.apply(this,arguments)};if(s.prototype=o(i.prototype),a(s.prototype,t),s.extend=e.Type.extend,t.name||i.prototype.name){var n=t.name||i.prototype.name,l=e.defaults[i.prototype.name]?o(e.defaults[i.prototype.name]):{};e.defaults[n]=a(l,t.defaults),e.types[n]=s,e.prototype[n]=function(t,i){var o=h(e.defaults.global,e.defaults[n],i||{});return new s(t,o,this)}}else d("Name not provided for this chart, so it hasn't been registered");return i},e.Element=function(t){a(this,t),this.initialize.apply(this,arguments),this.save()},a(e.Element.prototype,{initialize:function(){},restore:function(t){return t?n(t,function(t){this[t]=this._saved[t]},this):a(this,this._saved),this},save:function(){return this._saved=o(this),delete this._saved._saved,this},update:function(t){return n(t,function(t,i){this._saved[i]=this[i],this[i]=t},this),this},transition:function(t,i){return n(t,function(t,e){this[e]=(t-this._saved[e])*i+this._saved[e]},this),this},tooltipPosition:function(){return{x:this.x,y:this.y}},hasValue:function(){return f(this.value)}}),e.Element.extend=r,e.Point=e.Element.extend({display:!0,inRange:function(t,i){var e=this.hitDetectionRadius+this.radius;return Math.pow(t-this.x,2)+Math.pow(i-this.y,2)<Math.pow(e,2)},draw:function(){if(this.display){var t=this.ctx;t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.closePath(),t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWidth,t.fillStyle=this.fillColor,t.fill(),t.stroke()}}}),e.Arc=e.Element.extend({inRange:function(t,i){var e=s.getAngleFromPoint(this,{x:t,y:i}),n=e.angle%(2*Math.PI),o=(2*Math.PI+this.startAngle)%(2*Math.PI),a=(2*Math.PI+this.endAngle)%(2*Math.PI)||360,h=o>a?a>=n||n>=o:n>=o&&a>=n,l=e.distance>=this.innerRadius&&e.distance<=this.outerRadius;return h&&l},tooltipPosition:function(){var t=this.startAngle+(this.endAngle-this.startAngle)/2,i=(this.outerRadius-this.innerRadius)/2+this.innerRadius;return{x:this.x+Math.cos(t)*i,y:this.y+Math.sin(t)*i}},draw:function(t){var i=this.ctx;i.beginPath(),i.arc(this.x,this.y,this.outerRadius<0?0:this.outerRadius,this.startAngle,this.endAngle),i.arc(this.x,this.y,this.innerRadius<0?0:this.innerRadius,this.endAngle,this.startAngle,!0),i.closePath(),i.strokeStyle=this.strokeColor,i.lineWidth=this.strokeWidth,i.fillStyle=this.fillColor,i.fill(),i.lineJoin="bevel",this.showStroke&&i.stroke()}}),e.Rectangle=e.Element.extend({draw:function(){var t=this.ctx,i=this.width/2,e=this.x-i,s=this.x+i,n=this.base-(this.base-this.y),o=this.strokeWidth/2;this.showStroke&&(e+=o,s-=o,n+=o),t.beginPath(),t.fillStyle=this.fillColor,t.strokeStyle=this.strokeColor,t.lineWidth=this.strokeWidth,t.moveTo(e,this.base),t.lineTo(e,n),t.lineTo(s,n),t.lineTo(s,this.base),t.fill(),this.showStroke&&t.stroke()},height:function(){return this.base-this.y},inRange:function(t,i){return t>=this.x-this.width/2&&t<=this.x+this.width/2&&i>=this.y&&i<=this.base}}),e.Animation=e.Element.extend({currentStep:null,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),e.Tooltip=e.Element.extend({draw:function(){var t=this.chart.ctx;t.font=W(this.fontSize,this.fontStyle,this.fontFamily),this.xAlign="center",this.yAlign="above";var i=this.caretPadding=2,e=t.measureText(this.text).width+2*this.xPadding,s=this.fontSize+2*this.yPadding,n=s+this.caretHeight+i;this.x+e/2>this.chart.width?this.xAlign="left":this.x-e/2<0&&(this.xAlign="right"),this.y-n<0&&(this.yAlign="below");var o=this.x-e/2,a=this.y-n;if(t.fillStyle=this.fillColor,this.custom)this.custom(this);else{switch(this.yAlign){case"above":t.beginPath(),t.moveTo(this.x,this.y-i),t.lineTo(this.x+this.caretHeight,this.y-(i+this.caretHeight)),t.lineTo(this.x-this.caretHeight,this.y-(i+this.caretHeight)),t.closePath(),t.fill();break;case"below":a=this.y+i+this.caretHeight,t.beginPath(),t.moveTo(this.x,this.y+i),t.lineTo(this.x+this.caretHeight,this.y+i+this.caretHeight),t.lineTo(this.x-this.caretHeight,this.y+i+this.caretHeight),t.closePath(),t.fill()}switch(this.xAlign){case"left":o=this.x-e+(this.cornerRadius+this.caretHeight);break;case"right":o=this.x-(this.cornerRadius+this.caretHeight)}B(t,o,a,e,s,this.cornerRadius),t.fill(),t.fillStyle=this.textColor,t.textAlign="center",t.textBaseline="middle",t.fillText(this.text,o+e/2,a+s/2)}}}),e.MultiTooltip=e.Element.extend({initialize:function(){this.font=W(this.fontSize,this.fontStyle,this.fontFamily),this.titleFont=W(this.titleFontSize,this.titleFontStyle,this.titleFontFamily),this.titleHeight=this.title?1.5*this.titleFontSize:0,this.height=this.labels.length*this.fontSize+(this.labels.length-1)*(this.fontSize/2)+2*this.yPadding+this.titleHeight,this.ctx.font=this.titleFont;var t=this.ctx.measureText(this.title).width,i=z(this.ctx,this.font,this.labels)+this.fontSize+3,e=g([i,t]);this.width=e+2*this.xPadding;var s=this.height/2;this.y-s<0?this.y=s:this.y+s>this.chart.height&&(this.y=this.chart.height-s),this.x>this.chart.width/2?this.x-=this.xOffset+this.width:this.x+=this.xOffset},getLineHeight:function(t){var i=this.y-this.height/2+this.yPadding,e=t-1;return 0===t?i+this.titleHeight/3:i+(1.5*this.fontSize*e+this.fontSize/2)+this.titleHeight},draw:function(){if(this.custom)this.custom(this);else{B(this.ctx,this.x,this.y-this.height/2,this.width,this.height,this.cornerRadius);var t=this.ctx;t.fillStyle=this.fillColor,t.fill(),t.closePath(),t.textAlign="left",t.textBaseline="middle",t.fillStyle=this.titleTextColor,t.font=this.titleFont,t.fillText(this.title,this.x+this.xPadding,this.getLineHeight(0)),t.font=this.font,s.each(this.labels,function(i,e){t.fillStyle=this.textColor,t.fillText(i,this.x+this.xPadding+this.fontSize+3,this.getLineHeight(e+1)),t.fillStyle=this.legendColorBackground,t.fillRect(this.x+this.xPadding,this.getLineHeight(e+1)-this.fontSize/2,this.fontSize,this.fontSize),t.fillStyle=this.legendColors[e].fill,t.fillRect(this.x+this.xPadding,this.getLineHeight(e+1)-this.fontSize/2,this.fontSize,this.fontSize)},this)}}}),e.Scale=e.Element.extend({initialize:function(){this.fit()},buildYLabels:function(){this.yLabels=[];for(var t=v(this.stepValue),i=0;i<=this.steps;i++)this.yLabels.push(C(this.templateString,{value:(this.min+i*this.stepValue).toFixed(t)}));this.yLabelWidth=this.display&&this.showLabels?z(this.ctx,this.font,this.yLabels)+10:0},addXLabel:function(t){this.xLabels.push(t),this.valuesCount++,this.fit()},removeXLabel:function(){this.xLabels.shift(),this.valuesCount--,this.fit()},fit:function(){this.startPoint=this.display?this.fontSize:0,this.endPoint=this.display?this.height-1.5*this.fontSize-5:this.height,this.startPoint+=this.padding,this.endPoint-=this.padding;var t,i=this.endPoint,e=this.endPoint-this.startPoint;for(this.calculateYRange(e),this.buildYLabels(),this.calculateXLabelRotation();e>this.endPoint-this.startPoint;)e=this.endPoint-this.startPoint,t=this.yLabelWidth,this.calculateYRange(e),this.buildYLabels(),t<this.yLabelWidth&&(this.endPoint=i,this.calculateXLabelRotation())},calculateXLabelRotation:function(){this.ctx.font=this.font;var t,i,e=this.ctx.measureText(this.xLabels[0]).width,s=this.ctx.measureText(this.xLabels[this.xLabels.length-1]).width;if(this.xScalePaddingRight=s/2+3,this.xScalePaddingLeft=e/2>this.yLabelWidth?e/2:this.yLabelWidth,this.xLabelRotation=0,this.display){var n,o=z(this.ctx,this.font,this.xLabels);this.xLabelWidth=o;for(var a=Math.floor(this.calculateX(1)-this.calculateX(0))-6;this.xLabelWidth>a&&0===this.xLabelRotation||this.xLabelWidth>a&&this.xLabelRotation<=90&&this.xLabelRotation>0;)n=Math.cos(S(this.xLabelRotation)),t=n*e,i=n*s,t+this.fontSize/2>this.yLabelWidth&&(this.xScalePaddingLeft=t+this.fontSize/2),this.xScalePaddingRight=this.fontSize/2,this.xLabelRotation++,this.xLabelWidth=n*o;this.xLabelRotation>0&&(this.endPoint-=Math.sin(S(this.xLabelRotation))*o+3)}else this.xLabelWidth=0,this.xScalePaddingRight=this.padding,this.xScalePaddingLeft=this.padding},calculateYRange:c,drawingArea:function(){return this.startPoint-this.endPoint},calculateY:function(t){var i=this.drawingArea()/(this.min-this.max);return this.endPoint-i*(t-this.min)},calculateX:function(t){var i=(this.xLabelRotation>0,this.width-(this.xScalePaddingLeft+this.xScalePaddingRight)),e=i/Math.max(this.valuesCount-(this.offsetGridLines?0:1),1),s=e*t+this.xScalePaddingLeft;return this.offsetGridLines&&(s+=e/2),Math.round(s)},update:function(t){s.extend(this,t),this.fit()},draw:function(){var t=this.ctx,i=(this.endPoint-this.startPoint)/this.steps,e=Math.round(this.xScalePaddingLeft);this.display&&(t.fillStyle=this.textColor,t.font=this.font,n(this.yLabels,function(n,o){var a=this.endPoint-i*o,h=Math.round(a),l=this.showHorizontalLines;t.textAlign="right",t.textBaseline="middle",this.showLabels&&t.fillText(n,e-10,a),0!==o||l||(l=!0),l&&t.beginPath(),o>0?(t.lineWidth=this.gridLineWidth,t.strokeStyle=this.gridLineColor):(t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor),h+=s.aliasPixel(t.lineWidth),l&&(t.moveTo(e,h),t.lineTo(this.width,h),t.stroke(),t.closePath()),t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor,t.beginPath(),t.moveTo(e-5,h),t.lineTo(e,h),t.stroke(),t.closePath()},this),n(this.xLabels,function(i,e){var s=this.calculateX(e)+x(this.lineWidth),n=this.calculateX(e-(this.offsetGridLines?.5:0))+x(this.lineWidth),o=this.xLabelRotation>0,a=this.showVerticalLines;0!==e||a||(a=!0),a&&t.beginPath(),e>0?(t.lineWidth=this.gridLineWidth,t.strokeStyle=this.gridLineColor):(t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor),a&&(t.moveTo(n,this.endPoint),t.lineTo(n,this.startPoint-3),t.stroke(),t.closePath()),t.lineWidth=this.lineWidth,t.strokeStyle=this.lineColor,t.beginPath(),t.moveTo(n,this.endPoint),t.lineTo(n,this.endPoint+5),t.stroke(),t.closePath(),t.save(),t.translate(s,o?this.endPoint+12:this.endPoint+8),t.rotate(-1*S(this.xLabelRotation)),t.font=this.font,t.textAlign=o?"right":"center",t.textBaseline=o?"middle":"top",t.fillText(i,0,0),t.restore()},this))}}),e.RadialScale=e.Element.extend({initialize:function(){this.size=m([this.height,this.width]),this.drawingArea=this.display?this.size/2-(this.fontSize/2+this.backdropPaddingY):this.size/2},calculateCenterOffset:function(t){var i=this.drawingArea/(this.max-this.min);return(t-this.min)*i},update:function(){this.lineArc?this.drawingArea=this.display?this.size/2-(this.fontSize/2+this.backdropPaddingY):this.size/2:this.setScaleSize(),this.buildYLabels()},buildYLabels:function(){this.yLabels=[];for(var t=v(this.stepValue),i=0;i<=this.steps;i++)this.yLabels.push(C(this.templateString,{value:(this.min+i*this.stepValue).toFixed(t)}))},getCircumference:function(){return 2*Math.PI/this.valuesCount},setScaleSize:function(){var t,i,e,s,n,o,a,h,l,r,c,u,d=m([this.height/2-this.pointLabelFontSize-5,this.width/2]),p=this.width,g=0;for(this.ctx.font=W(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily),i=0;i<this.valuesCount;i++)t=this.getPointPosition(i,d),e=this.ctx.measureText(C(this.templateString,{value:this.labels[i]})).width+5,0===i||i===this.valuesCount/2?(s=e/2,t.x+s>p&&(p=t.x+s,n=i),t.x-s<g&&(g=t.x-s,a=i)):i<this.valuesCount/2?t.x+e>p&&(p=t.x+e,n=i):i>this.valuesCount/2&&t.x-e<g&&(g=t.x-e,a=i);l=g,r=Math.ceil(p-this.width),o=this.getIndexAngle(n),h=this.getIndexAngle(a),c=r/Math.sin(o+Math.PI/2),u=l/Math.sin(h+Math.PI/2),c=f(c)?c:0,u=f(u)?u:0,this.drawingArea=d-(u+c)/2,this.setCenterPoint(u,c)},setCenterPoint:function(t,i){var e=this.width-i-this.drawingArea,s=t+this.drawingArea;this.xCenter=(s+e)/2,this.yCenter=this.height/2},getIndexAngle:function(t){var i=2*Math.PI/this.valuesCount;return t*i-Math.PI/2},getPointPosition:function(t,i){var e=this.getIndexAngle(t);return{x:Math.cos(e)*i+this.xCenter,y:Math.sin(e)*i+this.yCenter}},draw:function(){if(this.display){var t=this.ctx;if(n(this.yLabels,function(i,e){if(e>0){var s,n=e*(this.drawingArea/this.steps),o=this.yCenter-n;if(this.lineWidth>0)if(t.strokeStyle=this.lineColor,t.lineWidth=this.lineWidth,this.lineArc)t.beginPath(),t.arc(this.xCenter,this.yCenter,n,0,2*Math.PI),t.closePath(),t.stroke();else{t.beginPath();for(var a=0;a<this.valuesCount;a++)s=this.getPointPosition(a,this.calculateCenterOffset(this.min+e*this.stepValue)),0===a?t.moveTo(s.x,s.y):t.lineTo(s.x,s.y);t.closePath(),t.stroke()}if(this.showLabels){if(t.font=W(this.fontSize,this.fontStyle,this.fontFamily),this.showLabelBackdrop){var h=t.measureText(i).width;t.fillStyle=this.backdropColor,t.fillRect(this.xCenter-h/2-this.backdropPaddingX,o-this.fontSize/2-this.backdropPaddingY,h+2*this.backdropPaddingX,this.fontSize+2*this.backdropPaddingY)}t.textAlign="center",t.textBaseline="middle",t.fillStyle=this.fontColor,t.fillText(i,this.xCenter,o)}}},this),!this.lineArc){t.lineWidth=this.angleLineWidth,t.strokeStyle=this.angleLineColor;for(var i=this.valuesCount-1;i>=0;i--){var e=null,s=null;if(this.angleLineWidth>0&&(e=this.calculateCenterOffset(this.max),s=this.getPointPosition(i,e),t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(s.x,s.y),t.stroke(),t.closePath()),this.backgroundColors&&this.backgroundColors.length==this.valuesCount){null==e&&(e=this.calculateCenterOffset(this.max)),null==s&&(s=this.getPointPosition(i,e));var o=this.getPointPosition(0===i?this.valuesCount-1:i-1,e),a=this.getPointPosition(i===this.valuesCount-1?0:i+1,e),h={x:(o.x+s.x)/2,y:(o.y+s.y)/2},l={x:(s.x+a.x)/2,y:(s.y+a.y)/2};t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(h.x,h.y),t.lineTo(s.x,s.y),t.lineTo(l.x,l.y),t.fillStyle=this.backgroundColors[i],t.fill(),t.closePath()}var r=this.getPointPosition(i,this.calculateCenterOffset(this.max)+5);t.font=W(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily),t.fillStyle=this.pointLabelFontColor;var c=this.labels.length,u=this.labels.length/2,d=u/2,p=d>i||i>c-d,f=i===d||i===c-d;0===i?t.textAlign="center":i===u?t.textAlign="center":u>i?t.textAlign="left":t.textAlign="right",f?t.textBaseline="middle":p?t.textBaseline="bottom":t.textBaseline="top",t.fillText(this.labels[i],r.x,r.y)}}}}}),e.animationService={frameDuration:17,animations:[],dropFrames:0,addAnimation:function(t,i){for(var e=0;e<this.animations.length;++e)if(this.animations[e].chartInstance===t)return void(this.animations[e].animationObject=i);this.animations.push({chartInstance:t,animationObject:i}),1==this.animations.length&&s.requestAnimFrame.call(window,this.digestWrapper)},cancelAnimation:function(t){var i=s.findNextWhere(this.animations,function(i){return i.chartInstance===t});i&&this.animations.splice(i,1)},digestWrapper:function(){e.animationService.startDigest.call(e.animationService)},startDigest:function(){var t=Date.now(),i=0;this.dropFrames>1&&(i=Math.floor(this.dropFrames),this.dropFrames-=i);for(var e=0;e<this.animations.length;e++)null===this.animations[e].animationObject.currentStep&&(this.animations[e].animationObject.currentStep=0),this.animations[e].animationObject.currentStep+=1+i,this.animations[e].animationObject.currentStep>this.animations[e].animationObject.numSteps&&(this.animations[e].animationObject.currentStep=this.animations[e].animationObject.numSteps),this.animations[e].animationObject.render(this.animations[e].chartInstance,this.animations[e].animationObject),this.animations[e].animationObject.currentStep==this.animations[e].animationObject.numSteps&&(this.animations[e].animationObject.onAnimationComplete.call(this.animations[e].chartInstance),this.animations.splice(e,1),e--);var n=Date.now(),o=n-t-this.frameDuration,a=o/this.frameDuration;a>1&&(this.dropFrames+=a),this.animations.length>0&&s.requestAnimFrame.call(window,this.digestWrapper)}},s.addEvent(window,"resize",function(){var t;return function(){clearTimeout(t),t=setTimeout(function(){n(e.instances,function(t){t.options.responsive&&t.resize(t.render,!0)})},50)}}()),p?define(function(){return e}):"object"==typeof module&&module.exports&&(module.exports=e),t.Chart=e,e.noConflict=function(){return t.Chart=i,e}}).call(this),function(){"use strict";var t=this,i=t.Chart,e=i.helpers,s={scaleBeginAtZero:!0,scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleShowHorizontalLines:!0,scaleShowVerticalLines:!0,barShowStroke:!0,barStrokeWidth:2,barValueSpacing:5,barDatasetSpacing:1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>'};i.Type.extend({name:"Bar",defaults:s,initialize:function(t){var s=this.options;this.ScaleClass=i.Scale.extend({offsetGridLines:!0,calculateBarX:function(t,i,e){var n=this.calculateBaseWidth(),o=this.calculateX(e)-n/2,a=this.calculateBarWidth(t);return o+a*i+i*s.barDatasetSpacing+a/2},calculateBaseWidth:function(){return this.calculateX(1)-this.calculateX(0)-2*s.barValueSpacing},calculateBarWidth:function(t){var i=this.calculateBaseWidth()-(t-1)*s.barDatasetSpacing;
return i/t}}),this.datasets=[],this.options.showTooltips&&e.bindEvents(this,this.options.tooltipEvents,function(t){var i="mouseout"!==t.type?this.getBarsAtEvent(t):[];this.eachBars(function(t){t.restore(["fillColor","strokeColor"])}),e.each(i,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(i)}),this.BarClass=i.Rectangle.extend({strokeWidth:this.options.barStrokeWidth,showStroke:this.options.barShowStroke,ctx:this.chart.ctx}),e.each(t.datasets,function(i,s){var n={label:i.label||null,fillColor:i.fillColor,strokeColor:i.strokeColor,bars:[]};this.datasets.push(n),e.each(i.data,function(e,s){n.bars.push(new this.BarClass({value:e,label:t.labels[s],datasetLabel:i.label,strokeColor:i.strokeColor,fillColor:i.fillColor,highlightFill:i.highlightFill||i.fillColor,highlightStroke:i.highlightStroke||i.strokeColor}))},this)},this),this.buildScale(t.labels),this.BarClass.prototype.base=this.scale.endPoint,this.eachBars(function(t,i,s){e.extend(t,{width:this.scale.calculateBarWidth(this.datasets.length),x:this.scale.calculateBarX(this.datasets.length,s,i),y:this.scale.endPoint}),t.save()},this),this.render()},update:function(){this.scale.update(),e.each(this.activeElements,function(t){t.restore(["fillColor","strokeColor"])}),this.eachBars(function(t){t.save()}),this.render()},eachBars:function(t){e.each(this.datasets,function(i,s){e.each(i.bars,t,this,s)},this)},getBarsAtEvent:function(t){for(var i,s=[],n=e.getRelativePosition(t),o=function(t){s.push(t.bars[i])},a=0;a<this.datasets.length;a++)for(i=0;i<this.datasets[a].bars.length;i++)if(this.datasets[a].bars[i].inRange(n.x,n.y))return e.each(this.datasets,o),s;return s},buildScale:function(t){var i=this,s=function(){var t=[];return i.eachBars(function(i){t.push(i.value)}),t},n={templateString:this.options.scaleLabel,height:this.chart.height,width:this.chart.width,ctx:this.chart.ctx,textColor:this.options.scaleFontColor,fontSize:this.options.scaleFontSize,fontStyle:this.options.scaleFontStyle,fontFamily:this.options.scaleFontFamily,valuesCount:t.length,beginAtZero:this.options.scaleBeginAtZero,integersOnly:this.options.scaleIntegersOnly,calculateYRange:function(t){var i=e.calculateScaleRange(s(),t,this.fontSize,this.beginAtZero,this.integersOnly);e.extend(this,i)},xLabels:t,font:e.fontString(this.options.scaleFontSize,this.options.scaleFontStyle,this.options.scaleFontFamily),lineWidth:this.options.scaleLineWidth,lineColor:this.options.scaleLineColor,showHorizontalLines:this.options.scaleShowHorizontalLines,showVerticalLines:this.options.scaleShowVerticalLines,gridLineWidth:this.options.scaleShowGridLines?this.options.scaleGridLineWidth:0,gridLineColor:this.options.scaleShowGridLines?this.options.scaleGridLineColor:"rgba(0,0,0,0)",padding:this.options.showScale?0:this.options.barShowStroke?this.options.barStrokeWidth:0,showLabels:this.options.scaleShowLabels,display:this.options.showScale};this.options.scaleOverride&&e.extend(n,{calculateYRange:e.noop,steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}),this.scale=new this.ScaleClass(n)},addData:function(t,i){e.each(t,function(t,e){this.datasets[e].bars.push(new this.BarClass({value:t,label:i,datasetLabel:this.datasets[e].label,x:this.scale.calculateBarX(this.datasets.length,e,this.scale.valuesCount+1),y:this.scale.endPoint,width:this.scale.calculateBarWidth(this.datasets.length),base:this.scale.endPoint,strokeColor:this.datasets[e].strokeColor,fillColor:this.datasets[e].fillColor}))},this),this.scale.addXLabel(i),this.update()},removeData:function(){this.scale.removeXLabel(),e.each(this.datasets,function(t){t.bars.shift()},this),this.update()},reflow:function(){e.extend(this.BarClass.prototype,{y:this.scale.endPoint,base:this.scale.endPoint});var t=e.extend({height:this.chart.height,width:this.chart.width});this.scale.update(t)},draw:function(t){var i=t||1;this.clear();this.chart.ctx;this.scale.draw(i),e.each(this.datasets,function(t,s){e.each(t.bars,function(t,e){t.hasValue()&&(t.base=this.scale.endPoint,t.transition({x:this.scale.calculateBarX(this.datasets.length,s,e),y:this.scale.calculateY(t.value),width:this.scale.calculateBarWidth(this.datasets.length)},i).draw())},this)},this)}})}.call(this),function(){"use strict";var t=this,i=t.Chart,e=i.helpers,s={segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:50,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>'};i.Type.extend({name:"Doughnut",defaults:s,initialize:function(t){this.segments=[],this.outerRadius=(e.min([this.chart.width,this.chart.height])-this.options.segmentStrokeWidth/2)/2,this.SegmentArc=i.Arc.extend({ctx:this.chart.ctx,x:this.chart.width/2,y:this.chart.height/2}),this.options.showTooltips&&e.bindEvents(this,this.options.tooltipEvents,function(t){var i="mouseout"!==t.type?this.getSegmentsAtEvent(t):[];e.each(this.segments,function(t){t.restore(["fillColor"])}),e.each(i,function(t){t.fillColor=t.highlightColor}),this.showTooltip(i)}),this.calculateTotal(t),e.each(t,function(i,e){i.color||(i.color="hsl("+360*e/t.length+", 100%, 50%)"),this.addData(i,e,!0)},this),this.render()},getSegmentsAtEvent:function(t){var i=[],s=e.getRelativePosition(t);return e.each(this.segments,function(t){t.inRange(s.x,s.y)&&i.push(t)},this),i},addData:function(t,e,s){var n=void 0!==e?e:this.segments.length;"undefined"==typeof t.color&&(t.color=i.defaults.global.segmentColorDefault[n%i.defaults.global.segmentColorDefault.length],t.highlight=i.defaults.global.segmentHighlightColorDefaults[n%i.defaults.global.segmentHighlightColorDefaults.length]),this.segments.splice(n,0,new this.SegmentArc({value:t.value,outerRadius:this.options.animateScale?0:this.outerRadius,innerRadius:this.options.animateScale?0:this.outerRadius/100*this.options.percentageInnerCutout,fillColor:t.color,highlightColor:t.highlight||t.color,showStroke:this.options.segmentShowStroke,strokeWidth:this.options.segmentStrokeWidth,strokeColor:this.options.segmentStrokeColor,startAngle:1.5*Math.PI,circumference:this.options.animateRotate?0:this.calculateCircumference(t.value),label:t.label})),s||(this.reflow(),this.update())},calculateCircumference:function(t){return this.total>0?2*Math.PI*(t/this.total):0},calculateTotal:function(t){this.total=0,e.each(t,function(t){this.total+=Math.abs(t.value)},this)},update:function(){this.calculateTotal(this.segments),e.each(this.activeElements,function(t){t.restore(["fillColor"])}),e.each(this.segments,function(t){t.save()}),this.render()},removeData:function(t){var i=e.isNumber(t)?t:this.segments.length-1;this.segments.splice(i,1),this.reflow(),this.update()},reflow:function(){e.extend(this.SegmentArc.prototype,{x:this.chart.width/2,y:this.chart.height/2}),this.outerRadius=(e.min([this.chart.width,this.chart.height])-this.options.segmentStrokeWidth/2)/2,e.each(this.segments,function(t){t.update({outerRadius:this.outerRadius,innerRadius:this.outerRadius/100*this.options.percentageInnerCutout})},this)},draw:function(t){var i=t?t:1;this.clear(),e.each(this.segments,function(t,e){t.transition({circumference:this.calculateCircumference(t.value),outerRadius:this.outerRadius,innerRadius:this.outerRadius/100*this.options.percentageInnerCutout},i),t.endAngle=t.startAngle+t.circumference,t.draw(),0===e&&(t.startAngle=1.5*Math.PI),e<this.segments.length-1&&(this.segments[e+1].startAngle=t.endAngle)},this)}}),i.types.Doughnut.extend({name:"Pie",defaults:e.merge(s,{percentageInnerCutout:0})})}.call(this),function(){"use strict";var t=this,i=t.Chart,e=i.helpers,s={scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleShowHorizontalLines:!0,scaleShowVerticalLines:!0,bezierCurve:!0,bezierCurveTension:.4,pointDot:!0,pointDotRadius:4,pointDotStrokeWidth:1,pointHitDetectionRadius:20,datasetStroke:!0,datasetStrokeWidth:2,datasetFill:!0,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>',offsetGridLines:!1};i.Type.extend({name:"Line",defaults:s,initialize:function(t){this.PointClass=i.Point.extend({offsetGridLines:this.options.offsetGridLines,strokeWidth:this.options.pointDotStrokeWidth,radius:this.options.pointDotRadius,display:this.options.pointDot,hitDetectionRadius:this.options.pointHitDetectionRadius,ctx:this.chart.ctx,inRange:function(t){return Math.pow(t-this.x,2)<Math.pow(this.radius+this.hitDetectionRadius,2)}}),this.datasets=[],this.options.showTooltips&&e.bindEvents(this,this.options.tooltipEvents,function(t){var i="mouseout"!==t.type?this.getPointsAtEvent(t):[];this.eachPoints(function(t){t.restore(["fillColor","strokeColor"])}),e.each(i,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(i)}),e.each(t.datasets,function(i){var s={label:i.label||null,fillColor:i.fillColor,strokeColor:i.strokeColor,pointColor:i.pointColor,pointStrokeColor:i.pointStrokeColor,points:[]};this.datasets.push(s),e.each(i.data,function(e,n){s.points.push(new this.PointClass({value:e,label:t.labels[n],datasetLabel:i.label,strokeColor:i.pointStrokeColor,fillColor:i.pointColor,highlightFill:i.pointHighlightFill||i.pointColor,highlightStroke:i.pointHighlightStroke||i.pointStrokeColor}))},this),this.buildScale(t.labels),this.eachPoints(function(t,i){e.extend(t,{x:this.scale.calculateX(i),y:this.scale.endPoint}),t.save()},this)},this),this.render()},update:function(){this.scale.update(),e.each(this.activeElements,function(t){t.restore(["fillColor","strokeColor"])}),this.eachPoints(function(t){t.save()}),this.render()},eachPoints:function(t){e.each(this.datasets,function(i){e.each(i.points,t,this)},this)},getPointsAtEvent:function(t){var i=[],s=e.getRelativePosition(t);return e.each(this.datasets,function(t){e.each(t.points,function(t){t.inRange(s.x,s.y)&&i.push(t)})},this),i},buildScale:function(t){var s=this,n=function(){var t=[];return s.eachPoints(function(i){t.push(i.value)}),t},o={templateString:this.options.scaleLabel,height:this.chart.height,width:this.chart.width,ctx:this.chart.ctx,textColor:this.options.scaleFontColor,offsetGridLines:this.options.offsetGridLines,fontSize:this.options.scaleFontSize,fontStyle:this.options.scaleFontStyle,fontFamily:this.options.scaleFontFamily,valuesCount:t.length,beginAtZero:this.options.scaleBeginAtZero,integersOnly:this.options.scaleIntegersOnly,calculateYRange:function(t){var i=e.calculateScaleRange(n(),t,this.fontSize,this.beginAtZero,this.integersOnly);e.extend(this,i)},xLabels:t,font:e.fontString(this.options.scaleFontSize,this.options.scaleFontStyle,this.options.scaleFontFamily),lineWidth:this.options.scaleLineWidth,lineColor:this.options.scaleLineColor,showHorizontalLines:this.options.scaleShowHorizontalLines,showVerticalLines:this.options.scaleShowVerticalLines,gridLineWidth:this.options.scaleShowGridLines?this.options.scaleGridLineWidth:0,gridLineColor:this.options.scaleShowGridLines?this.options.scaleGridLineColor:"rgba(0,0,0,0)",padding:this.options.showScale?0:this.options.pointDotRadius+this.options.pointDotStrokeWidth,showLabels:this.options.scaleShowLabels,display:this.options.showScale};this.options.scaleOverride&&e.extend(o,{calculateYRange:e.noop,steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}),this.scale=new i.Scale(o)},addData:function(t,i){e.each(t,function(t,e){this.datasets[e].points.push(new this.PointClass({value:t,label:i,datasetLabel:this.datasets[e].label,x:this.scale.calculateX(this.scale.valuesCount+1),y:this.scale.endPoint,strokeColor:this.datasets[e].pointStrokeColor,fillColor:this.datasets[e].pointColor}))},this),this.scale.addXLabel(i),this.update()},removeData:function(){this.scale.removeXLabel(),e.each(this.datasets,function(t){t.points.shift()},this),this.update()},reflow:function(){var t=e.extend({height:this.chart.height,width:this.chart.width});this.scale.update(t)},draw:function(t){var i=t||1;this.clear();var s=this.chart.ctx,n=function(t){return null!==t.value},o=function(t,i,s){return e.findNextWhere(i,n,s)||t},a=function(t,i,s){return e.findPreviousWhere(i,n,s)||t};this.scale&&(this.scale.draw(i),e.each(this.datasets,function(t){var h=e.where(t.points,n);e.each(t.points,function(t,e){t.hasValue()&&t.transition({y:this.scale.calculateY(t.value),x:this.scale.calculateX(e)},i)},this),this.options.bezierCurve&&e.each(h,function(t,i){var s=i>0&&i<h.length-1?this.options.bezierCurveTension:0;t.controlPoints=e.splineCurve(a(t,h,i),t,o(t,h,i),s),t.controlPoints.outer.y>this.scale.endPoint?t.controlPoints.outer.y=this.scale.endPoint:t.controlPoints.outer.y<this.scale.startPoint&&(t.controlPoints.outer.y=this.scale.startPoint),t.controlPoints.inner.y>this.scale.endPoint?t.controlPoints.inner.y=this.scale.endPoint:t.controlPoints.inner.y<this.scale.startPoint&&(t.controlPoints.inner.y=this.scale.startPoint)},this),s.lineWidth=this.options.datasetStrokeWidth,s.strokeStyle=t.strokeColor,s.beginPath(),e.each(h,function(t,i){if(0===i)s.moveTo(t.x,t.y);else if(this.options.bezierCurve){var e=a(t,h,i);s.bezierCurveTo(e.controlPoints.outer.x,e.controlPoints.outer.y,t.controlPoints.inner.x,t.controlPoints.inner.y,t.x,t.y)}else s.lineTo(t.x,t.y)},this),this.options.datasetStroke&&s.stroke(),this.options.datasetFill&&h.length>0&&(s.lineTo(h[h.length-1].x,this.scale.endPoint),s.lineTo(h[0].x,this.scale.endPoint),s.fillStyle=t.fillColor,s.closePath(),s.fill()),e.each(h,function(t){t.draw()})},this))}})}.call(this),function(){"use strict";var t=this,i=t.Chart,e=i.helpers,s={scaleShowLabelBackdrop:!0,scaleBackdropColor:"rgba(255,255,255,0.75)",scaleBeginAtZero:!0,scaleBackdropPaddingY:2,scaleBackdropPaddingX:2,scaleShowLine:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>'};i.Type.extend({name:"PolarArea",defaults:s,initialize:function(t){this.segments=[],this.SegmentArc=i.Arc.extend({showStroke:this.options.segmentShowStroke,strokeWidth:this.options.segmentStrokeWidth,strokeColor:this.options.segmentStrokeColor,ctx:this.chart.ctx,innerRadius:0,x:this.chart.width/2,y:this.chart.height/2}),this.scale=new i.RadialScale({display:this.options.showScale,fontStyle:this.options.scaleFontStyle,fontSize:this.options.scaleFontSize,fontFamily:this.options.scaleFontFamily,fontColor:this.options.scaleFontColor,showLabels:this.options.scaleShowLabels,showLabelBackdrop:this.options.scaleShowLabelBackdrop,backdropColor:this.options.scaleBackdropColor,backdropPaddingY:this.options.scaleBackdropPaddingY,backdropPaddingX:this.options.scaleBackdropPaddingX,lineWidth:this.options.scaleShowLine?this.options.scaleLineWidth:0,lineColor:this.options.scaleLineColor,lineArc:!0,width:this.chart.width,height:this.chart.height,xCenter:this.chart.width/2,yCenter:this.chart.height/2,ctx:this.chart.ctx,templateString:this.options.scaleLabel,valuesCount:t.length}),this.updateScaleRange(t),this.scale.update(),e.each(t,function(t,i){this.addData(t,i,!0)},this),this.options.showTooltips&&e.bindEvents(this,this.options.tooltipEvents,function(t){var i="mouseout"!==t.type?this.getSegmentsAtEvent(t):[];e.each(this.segments,function(t){t.restore(["fillColor"])}),e.each(i,function(t){t.fillColor=t.highlightColor}),this.showTooltip(i)}),this.render()},getSegmentsAtEvent:function(t){var i=[],s=e.getRelativePosition(t);return e.each(this.segments,function(t){t.inRange(s.x,s.y)&&i.push(t)},this),i},addData:function(t,i,e){var s=i||this.segments.length;this.segments.splice(s,0,new this.SegmentArc({fillColor:t.color,highlightColor:t.highlight||t.color,label:t.label,value:t.value,outerRadius:this.options.animateScale?0:this.scale.calculateCenterOffset(t.value),circumference:this.options.animateRotate?0:this.scale.getCircumference(),startAngle:1.5*Math.PI})),e||(this.reflow(),this.update())},removeData:function(t){var i=e.isNumber(t)?t:this.segments.length-1;this.segments.splice(i,1),this.reflow(),this.update()},calculateTotal:function(t){this.total=0,e.each(t,function(t){this.total+=t.value},this),this.scale.valuesCount=this.segments.length},updateScaleRange:function(t){var i=[];e.each(t,function(t){i.push(t.value)});var s=this.options.scaleOverride?{steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}:e.calculateScaleRange(i,e.min([this.chart.width,this.chart.height])/2,this.options.scaleFontSize,this.options.scaleBeginAtZero,this.options.scaleIntegersOnly);e.extend(this.scale,s,{size:e.min([this.chart.width,this.chart.height]),xCenter:this.chart.width/2,yCenter:this.chart.height/2})},update:function(){this.calculateTotal(this.segments),e.each(this.segments,function(t){t.save()}),this.reflow(),this.render()},reflow:function(){e.extend(this.SegmentArc.prototype,{x:this.chart.width/2,y:this.chart.height/2}),this.updateScaleRange(this.segments),this.scale.update(),e.extend(this.scale,{xCenter:this.chart.width/2,yCenter:this.chart.height/2}),e.each(this.segments,function(t){t.update({outerRadius:this.scale.calculateCenterOffset(t.value)})},this)},draw:function(t){var i=t||1;this.clear(),e.each(this.segments,function(t,e){t.transition({circumference:this.scale.getCircumference(),outerRadius:this.scale.calculateCenterOffset(t.value)},i),t.endAngle=t.startAngle+t.circumference,0===e&&(t.startAngle=1.5*Math.PI),e<this.segments.length-1&&(this.segments[e+1].startAngle=t.endAngle),t.draw()},this),this.scale.draw()}})}.call(this),function(){"use strict";var t=this,i=t.Chart,e=i.helpers;i.Type.extend({name:"Radar",defaults:{scaleShowLine:!0,angleShowLineOut:!0,scaleShowLabels:!1,scaleBeginAtZero:!0,angleLineColor:"rgba(0,0,0,.1)",angleLineWidth:1,pointLabelFontFamily:"'Arial'",pointLabelFontStyle:"normal",pointLabelFontSize:10,pointLabelFontColor:"#666",pointDot:!0,pointDotRadius:3,pointDotStrokeWidth:1,pointHitDetectionRadius:20,datasetStroke:!0,datasetStrokeWidth:2,datasetFill:!0,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>'},initialize:function(t){this.PointClass=i.Point.extend({strokeWidth:this.options.pointDotStrokeWidth,radius:this.options.pointDotRadius,display:this.options.pointDot,hitDetectionRadius:this.options.pointHitDetectionRadius,ctx:this.chart.ctx}),this.datasets=[],this.buildScale(t),this.options.showTooltips&&e.bindEvents(this,this.options.tooltipEvents,function(t){var i="mouseout"!==t.type?this.getPointsAtEvent(t):[];this.eachPoints(function(t){t.restore(["fillColor","strokeColor"])}),e.each(i,function(t){t.fillColor=t.highlightFill,t.strokeColor=t.highlightStroke}),this.showTooltip(i)}),e.each(t.datasets,function(i){var s={label:i.label||null,fillColor:i.fillColor,strokeColor:i.strokeColor,pointColor:i.pointColor,pointStrokeColor:i.pointStrokeColor,points:[]};this.datasets.push(s),e.each(i.data,function(e,n){var o;this.scale.animation||(o=this.scale.getPointPosition(n,this.scale.calculateCenterOffset(e))),s.points.push(new this.PointClass({value:e,label:t.labels[n],datasetLabel:i.label,x:this.options.animation?this.scale.xCenter:o.x,y:this.options.animation?this.scale.yCenter:o.y,strokeColor:i.pointStrokeColor,fillColor:i.pointColor,highlightFill:i.pointHighlightFill||i.pointColor,highlightStroke:i.pointHighlightStroke||i.pointStrokeColor}))},this)},this),this.render()},eachPoints:function(t){e.each(this.datasets,function(i){e.each(i.points,t,this)},this)},getPointsAtEvent:function(t){var i=e.getRelativePosition(t),s=e.getAngleFromPoint({x:this.scale.xCenter,y:this.scale.yCenter},i),n=2*Math.PI/this.scale.valuesCount,o=Math.round((s.angle-1.5*Math.PI)/n),a=[];return(o>=this.scale.valuesCount||0>o)&&(o=0),s.distance<=this.scale.drawingArea&&e.each(this.datasets,function(t){a.push(t.points[o])}),a},buildScale:function(t){this.scale=new i.RadialScale({display:this.options.showScale,fontStyle:this.options.scaleFontStyle,fontSize:this.options.scaleFontSize,fontFamily:this.options.scaleFontFamily,fontColor:this.options.scaleFontColor,showLabels:this.options.scaleShowLabels,showLabelBackdrop:this.options.scaleShowLabelBackdrop,backdropColor:this.options.scaleBackdropColor,backgroundColors:this.options.scaleBackgroundColors,backdropPaddingY:this.options.scaleBackdropPaddingY,backdropPaddingX:this.options.scaleBackdropPaddingX,lineWidth:this.options.scaleShowLine?this.options.scaleLineWidth:0,lineColor:this.options.scaleLineColor,angleLineColor:this.options.angleLineColor,angleLineWidth:this.options.angleShowLineOut?this.options.angleLineWidth:0,pointLabelFontColor:this.options.pointLabelFontColor,pointLabelFontSize:this.options.pointLabelFontSize,pointLabelFontFamily:this.options.pointLabelFontFamily,pointLabelFontStyle:this.options.pointLabelFontStyle,height:this.chart.height,width:this.chart.width,xCenter:this.chart.width/2,yCenter:this.chart.height/2,ctx:this.chart.ctx,templateString:this.options.scaleLabel,labels:t.labels,valuesCount:t.datasets[0].data.length}),this.scale.setScaleSize(),this.updateScaleRange(t.datasets),this.scale.buildYLabels()},updateScaleRange:function(t){var i=function(){var i=[];return e.each(t,function(t){t.data?i=i.concat(t.data):e.each(t.points,function(t){i.push(t.value)})}),i}(),s=this.options.scaleOverride?{steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}:e.calculateScaleRange(i,e.min([this.chart.width,this.chart.height])/2,this.options.scaleFontSize,this.options.scaleBeginAtZero,this.options.scaleIntegersOnly);e.extend(this.scale,s)},addData:function(t,i){this.scale.valuesCount++,e.each(t,function(t,e){var s=this.scale.getPointPosition(this.scale.valuesCount,this.scale.calculateCenterOffset(t));this.datasets[e].points.push(new this.PointClass({value:t,label:i,datasetLabel:this.datasets[e].label,x:s.x,y:s.y,strokeColor:this.datasets[e].pointStrokeColor,fillColor:this.datasets[e].pointColor}))},this),this.scale.labels.push(i),this.reflow(),this.update()},removeData:function(){this.scale.valuesCount--,this.scale.labels.shift(),e.each(this.datasets,function(t){t.points.shift()},this),this.reflow(),this.update()},update:function(){this.eachPoints(function(t){t.save()}),this.reflow(),this.render()},reflow:function(){e.extend(this.scale,{width:this.chart.width,height:this.chart.height,size:e.min([this.chart.width,this.chart.height]),xCenter:this.chart.width/2,yCenter:this.chart.height/2}),this.updateScaleRange(this.datasets),this.scale.setScaleSize(),this.scale.buildYLabels()},draw:function(t){var i=t||1,s=this.chart.ctx;this.clear(),this.scale.draw(),e.each(this.datasets,function(t){e.each(t.points,function(t,e){t.hasValue()&&t.transition(this.scale.getPointPosition(e,this.scale.calculateCenterOffset(t.value)),i)},this),s.lineWidth=this.options.datasetStrokeWidth,s.strokeStyle=t.strokeColor,s.beginPath(),e.each(t.points,function(t,i){0===i?s.moveTo(t.x,t.y):s.lineTo(t.x,t.y)},this),s.closePath(),s.stroke(),s.fillStyle=t.fillColor,this.options.datasetFill&&s.fill(),e.each(t.points,function(t){t.hasValue()&&t.draw()})},this)}})}.call(this);